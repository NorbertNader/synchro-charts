{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/index.mjs","../node_modules/@amzn/bp-components/dist/esm-es5/bp-chart-legend-standard.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/constants-2dc21ff9.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js","../node_modules/@amzn/bp-components/dist/esm-es5/chartDefaults-5713566e.js","../node_modules/@amzn/bp-components/dist/esm-es5/types-ef93b8eb.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","DATA_STREAM_INFO_1","id","color","name","DATA_STREAM_1","resolution","data","x","Date","y","BpChartLegendStandard","hostRef","registerInstance","this","isEditing","dataStreamInfo","prototype","onWidgetUpdated","_a","detail","changeEdit","render","h","onClick","configId","dataStreams","size","DEFAULT_CHART_CONFIG","legendPosition","LEGEND_POSITION","BOTTOM","isLoading","viewPort","start","end","yMax","yMin","ScaleType","SECOND_IN_MS","MINUTE_IN_MS","HOUR_IN_MS","DAY_IN_MS","MONTH_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","viewPortDurationMS","getTime","toLocaleString","second","hour12","month","year","width","height","marginLeft","marginRight","marginTop","marginBottom","movement","enableXScroll","enableYScroll","zoomMax","Infinity","zoomMin","layout","xGridVisible","yGridVisible","xTicksVisible","yTicksVisible","scale","xScaleType","TimeSeries","yScaleType","Linear","xScaleSide","yScaleSide","legend","position","COMPARISON_OPERATOR"],"mappings":"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","file":"static/js/stencil-bp-chart-legend-standard-entry-js.89524387.chunk.js","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nexport { C as COMPARISON_OPERATOR } from './types-ef93b8eb.js';\nexport { L as LEGEND_POSITION, S as ScaleType } from './constants-2dc21ff9.js';\nimport { S as SECOND_IN_MS } from './time-cc688558.js';\nvar MAX_FPS_TRACKED = 80;\nvar initFPSMetering = function () {\n    var trackedFPS = [];\n    var lastLoop = Date.now();\n    var thisLoop = Date.now();\n    var framesProcessed = 0;\n    var loop = setInterval(function () {\n        framesProcessed += 1;\n    }, SECOND_IN_MS / MAX_FPS_TRACKED);\n    var updateFPS = setInterval(function () {\n        thisLoop = Date.now();\n        var duration = (thisLoop - lastLoop) / SECOND_IN_MS;\n        trackedFPS.push(framesProcessed / Math.max(duration, 0.005));\n        lastLoop = thisLoop;\n        framesProcessed = 0;\n    }, SECOND_IN_MS / 4);\n    return {\n        reset: function () {\n            framesProcessed = 0;\n            thisLoop = Date.now();\n            lastLoop = Date.now();\n            trackedFPS = [];\n        },\n        fps: function () {\n            var sortedFPS = __spreadArrays(trackedFPS).sort();\n            var len = sortedFPS.length;\n            var mid = Math.ceil(len / 2);\n            var median = len % 2 === 0 ? (sortedFPS[mid] + sortedFPS[mid - 1]) / 2 : sortedFPS[mid - 1];\n            var sum = sortedFPS.reduce(function (total, num) { return total + num; }, 0);\n            var average = sum / len;\n            trackedFPS = [];\n            return { average: average, median: median };\n        },\n        stop: function () {\n            clearInterval(loop);\n            clearInterval(updateFPS);\n        },\n    };\n};\nexport { initFPSMetering };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h } from './index-326b73e4.js';\nimport './index.mjs';\nimport './types-ef93b8eb.js';\nimport { L as LEGEND_POSITION } from './constants-2dc21ff9.js';\nimport './time-cc688558.js';\nimport { D as DEFAULT_CHART_CONFIG } from './chartDefaults-5713566e.js';\nvar DATA_STREAM_INFO_1 = {\n    id: '1',\n    color: 'red',\n    name: '1',\n};\nvar DATA_STREAM_1 = {\n    id: '1',\n    resolution: 1000,\n    data: [{ x: new Date(2000, 0, 0, 1), y: 1 }, { x: new Date(2000, 0, 0, 2), y: 2 }],\n};\nvar BpChartLegendStandard = /** @class */ (function () {\n    function BpChartLegendStandard(hostRef) {\n        registerInstance(this, hostRef);\n        this.isEditing = false;\n        this.dataStreamInfo = [DATA_STREAM_INFO_1];\n    }\n    BpChartLegendStandard.prototype.onWidgetUpdated = function (_a) {\n        var dataStreamInfo = _a.detail.dataStreamInfo;\n        this.dataStreamInfo = __spreadArrays(dataStreamInfo);\n    };\n    BpChartLegendStandard.prototype.changeEdit = function () {\n        this.isEditing = !this.isEditing;\n    };\n    BpChartLegendStandard.prototype.render = function () {\n        return (h(\"div\", null, h(\"button\", { onClick: this.changeEdit }, \"Edit\"), h(\"bp-chart-legend\", { configId: \"legend\", isEditing: this.isEditing, dataStreamInfo: this.dataStreamInfo, dataStreams: [DATA_STREAM_1], size: DEFAULT_CHART_CONFIG.size, legendPosition: LEGEND_POSITION.BOTTOM, isLoading: false, viewPort: {\n                start: new Date(),\n                end: new Date(),\n                yMax: 100,\n                yMin: 0,\n            } })));\n    };\n    return BpChartLegendStandard;\n}());\nexport { BpChartLegendStandard as bp_chart_legend_standard };\n","// NOTE: `enum`s are held separately from the types which are exported\n// as part of the package, since `enum`'s cannot be present in a type declaration file.\n// THis is due to an `enum` being a type plus an implementation, while type declaration\n// files can only contain typing information.\n/**\n * Maps the view model to d3 axis types. In the future we could add additional\n * custom scale types beyond what's available in `d3-axis`.\n */\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"TimeSeries\"] = \"time-series\";\n    ScaleType[\"Log\"] = \"log\";\n    ScaleType[\"Linear\"] = \"linear\";\n})(ScaleType || (ScaleType = {}));\nvar LEGEND_POSITION;\n(function (LEGEND_POSITION) {\n    LEGEND_POSITION[\"RIGHT\"] = \"RIGHT\";\n    LEGEND_POSITION[\"BOTTOM\"] = \"BOTTOM\";\n})(LEGEND_POSITION || (LEGEND_POSITION = {}));\nexport { LEGEND_POSITION as L, ScaleType as S };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n","import { S as ScaleType, L as LEGEND_POSITION } from './constants-2dc21ff9.js';\nvar DEFAULT_CHART_CONFIG = {\n    id: 'fake-id',\n    viewPort: {\n        start: new Date(1995, 0, 0, 0),\n        end: new Date(2020, 1, 0, 0),\n        yMin: 0,\n        yMax: 10000,\n    },\n    // width is width - marginLeft - marginRight\n    size: { width: 400 + 50 + 25, height: 350, marginLeft: 50, marginRight: 50, marginTop: 8, marginBottom: 30 },\n    movement: {\n        enableXScroll: true,\n        enableYScroll: false,\n        zoomMax: Infinity,\n        zoomMin: 0.00001,\n    },\n    layout: {\n        xGridVisible: false,\n        yGridVisible: true,\n        xTicksVisible: true,\n        yTicksVisible: true,\n    },\n    scale: {\n        xScaleType: ScaleType.TimeSeries,\n        yScaleType: ScaleType.Linear,\n        xScaleSide: 'bottom',\n        yScaleSide: 'left',\n    },\n    dataStreamInfo: [],\n    legend: {\n        position: LEGEND_POSITION.BOTTOM,\n        width: 180,\n    },\n};\nexport { DEFAULT_CHART_CONFIG as D };\n","var COMPARISON_OPERATOR;\n(function (COMPARISON_OPERATOR) {\n    COMPARISON_OPERATOR[\"LESS_THAN\"] = \"LT\";\n    COMPARISON_OPERATOR[\"GREATER_THAN\"] = \"GT\";\n    COMPARISON_OPERATOR[\"LESS_THAN_EQUAL\"] = \"LTE\";\n    COMPARISON_OPERATOR[\"GREATER_THAN_EQUAL\"] = \"GTE\";\n})(COMPARISON_OPERATOR || (COMPARISON_OPERATOR = {}));\nexport { COMPARISON_OPERATOR as C };\n"],"sourceRoot":""}