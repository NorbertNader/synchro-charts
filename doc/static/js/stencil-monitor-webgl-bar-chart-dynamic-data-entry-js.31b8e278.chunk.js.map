{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/monitor-webgl-bar-chart-dynamic-data.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","X_MIN","Date","X_MAX","MonitorWebglBarChartDynamicData","hostRef","_this","this","registerInstance","data","monthIndex","addDataPoint","dataPoint","x","y","removeDataPoint","_a","rest","slice","prototype","render","h","id","onClick","style","height","width","resolution","MONTH_IN_MS","config","size","dataStreamInfo","color","name","viewPort","yMin","yMax","start","end","SECOND_IN_MS","MINUTE_IN_MS","HOUR_IN_MS","DAY_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","viewPortDurationMS","getTime","toLocaleString","second","hour12","month","year"],"mappings":"kJAAA,+FAAIA,EAAkD,WAClD,IAAK,IAAIC,EAAI,EAAGC,EAAI,EAAGC,EAAKC,UAAUC,OAAQH,EAAIC,EAAID,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIC,EAAIC,MAAMN,GAAIO,EAAI,EAA3B,IAA8BN,EAAI,EAAGA,EAAIC,EAAID,IACzC,IAAK,IAAIO,EAAIL,UAAUF,GAAIQ,EAAI,EAAGC,EAAKF,EAAEJ,OAAQK,EAAIC,EAAID,IAAKF,IAC1DF,EAAEE,GAAKC,EAAEC,GACjB,OAAOJ,GAOPM,EAAQ,IAAIC,KAAK,IAAM,GACvBC,EAAQ,IAAID,KAAK,KAAM,IACvBE,EAAiD,WACjD,SAASA,EAAgCC,GACrC,IAAIC,EAAQC,KACZC,YAAiBD,KAAMF,GACvBE,KAAKE,KAAO,GACZF,KAAKG,WAAa,EAClBH,KAAKI,aAAe,WAChB,IAAIC,EAAY,CACZC,EAAG,IAAIX,KAAK,IAAMI,EAAMI,YACxBI,EAAG,KAEPR,EAAMG,KAAOpB,EAAe,CAACuB,GAAYN,EAAMG,MAC/CH,EAAMI,YAAc,GAExBH,KAAKQ,gBAAkB,WAEnB,IAAIC,EAAKV,EAAMG,KAA2BQ,GAAPD,EAAG,GAAWA,EAAGE,MAAM,IAC1DZ,EAAMG,KAAOQ,GAoBrB,OAjBAb,EAAgCe,UAAUC,OAAS,WAC/C,OAAQC,YAAE,MAAO,KAAMA,YAAE,SAAU,CAAEC,GAAI,iBAAkBC,QAAShB,KAAKI,cAAgB,kBAAmBU,YAAE,SAAU,CAAEC,GAAI,oBAAqBC,QAAShB,KAAKQ,iBAAmB,qBAAsBM,YAAE,KAAM,MAAOA,YAAE,KAAM,MAAOA,YAAE,MAAO,CAAEC,GAAI,kBAAmBE,MAAO,CAAEC,OAAQ,QAASC,MAAO,UAAaL,YAAE,oBAAqB,CAAEZ,KAAM,CAAC,CAAEa,GAAI,OAAQb,KAAMF,KAAKE,KAAMkB,WAAYC,MAAgBC,OAAQ,CACnZP,GAAI,UACJQ,KAAM,CACFJ,MAAO,IACPD,OAAQ,KAEZM,eAAgB,CACZ,CACIT,GAAI,OACJU,MAAO,MACPC,KAAM,gBAGdC,SAAU,CAAEC,KAtChB,EAsC6BC,KArC7B,IAqC0CC,MAAOpC,EAAOqC,IAAKnC,MACvDkB,YAAE,wBAAyB,SAElCjB,EArC0C,I,gCCdrD,oRAAImC,EAAe,IACfC,EAAe,GAAKD,EACpBE,EAAa,GAAKD,EAClBE,EAAY,GAAKD,EAEjBb,EAAc,GAAKc,EACnBC,EAAa,GAAKf,EAyBlBgB,EAAY,SAAUC,GACtB,GAAIA,EAAe,EACf,MAAM,IAAIC,MAAM,4BAEpB,IAAIC,EAAUC,KAAKC,MAAMJ,EAAe,KACpCK,EAASF,KAAKC,MAAMF,EAAU,IAC9BI,EAAOH,KAAKC,MAAMC,EAAS,IAK/B,MAAO,CACHE,IALMJ,KAAKC,MAAME,EAAO,IAMxBA,KAHJA,GAAQ,GAIJD,OALJA,GAAU,GAMNH,QAPJA,GAAW,KAUXM,EAAc,SAAUC,EAAM3B,EAAYX,GAC1C,IAAIqB,EAAQrB,EAAGqB,MAAOC,EAAMtB,EAAGsB,IAC/B,GAAIX,EAAae,EAAW,CACxB,IAAIa,EAAqBjB,EAAIkB,UAAYnB,EAAMmB,UAC/C,OAAID,EAAqBf,EACdc,EAAKG,eAAe,QAAS,CAChCP,OAAQ,UACRQ,OAAQ,YAGZH,EAAqB,GAAKf,EACnBc,EAAKG,eAAe,QAAS,CAChCN,KAAM,UACND,OAAQ,UACRQ,OAAQ,UACRC,QAAQ,IAGTL,EAAKG,eAAe,QAAS,CAChCN,KAAM,UACND,OAAQ,UACRS,QAAQ,IAGhB,OAAIhC,GAAcc,EACPa,EAAKG,eAAe,QAAS,CAChCN,KAAM,UACNC,IAAK,OACLO,QAAQ,IAGZhC,GAAce,EACPY,EAAKG,eAAe,QAAS,CAChCL,IAAK,UACLQ,MAAO,SAGRN,EAAKG,eAAe,QAAS,CAChCI,KAAM,UACND,MAAO","file":"static/js/stencil-monitor-webgl-bar-chart-dynamic-data-entry-js.31b8e278.chunk.js","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h } from './index-326b73e4.js';\nimport { a as MONTH_IN_MS } from './time-cc688558.js';\n// viewport boundaries\nvar Y_MIN = 0;\nvar Y_MAX = 5000;\nvar X_MIN = new Date(2000, 0);\nvar X_MAX = new Date(2001, 12);\nvar MonitorWebglBarChartDynamicData = /** @class */ (function () {\n    function MonitorWebglBarChartDynamicData(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.data = [];\n        this.monthIndex = 1;\n        this.addDataPoint = function () {\n            var dataPoint = {\n                x: new Date(2000, _this.monthIndex),\n                y: 3000,\n            };\n            _this.data = __spreadArrays([dataPoint], _this.data);\n            _this.monthIndex += 2;\n        };\n        this.removeDataPoint = function () {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            var _a = _this.data, _firstPoint = _a[0], rest = _a.slice(1);\n            _this.data = rest;\n        };\n    }\n    MonitorWebglBarChartDynamicData.prototype.render = function () {\n        return (h(\"div\", null, h(\"button\", { id: \"add-data-point\", onClick: this.addDataPoint }, \"Add Data Point\"), h(\"button\", { id: \"remove-data-point\", onClick: this.removeDataPoint }, \"Remove Data Point\"), h(\"br\", null), h(\"br\", null), h(\"div\", { id: \"chart-container\", style: { height: '500px', width: '500px' } }, h(\"monitor-bar-chart\", { data: [{ id: 'test', data: this.data, resolution: MONTH_IN_MS }], config: {\n                id: 'test-id',\n                size: {\n                    width: 500,\n                    height: 500,\n                },\n                dataStreamInfo: [\n                    {\n                        id: 'test',\n                        color: 'red',\n                        name: 'test stream',\n                    },\n                ],\n                viewPort: { yMin: Y_MIN, yMax: Y_MAX, start: X_MIN, end: X_MAX },\n            } }), h(\"monitor-webgl-context\", null))));\n    };\n    return MonitorWebglBarChartDynamicData;\n}());\nexport { MonitorWebglBarChartDynamicData as monitor_webgl_bar_chart_dynamic_data };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}