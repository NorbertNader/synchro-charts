{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/constants-444fb3be.js","../node_modules/@amzn/bp-components/dist/esm-es5/monitor-webgl-bar-chart-dynamic-data-streams.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["Y_MIN","Y_MAX","X_MIN","Date","X_MAX","Y_VALUE","TEST_DATA_POINT_STANDARD","x","getTime","y","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","LEFT_X","MIDDLE_X","RIGHT_X","MonitorWebglBarChartDynamicDataStreams","hostRef","_this","this","registerInstance","dataStreams","dataStreamInfo","colorIndex","colors","increaseColorIndex","getColor","addStream","leftPoint","middlePoint","rightPoint","streamId","id","data","resolution","MONTH_IN_MS","color","name","removeStream","pop","prototype","render","h","onClick","style","marginTop","width","height","config","legend","undefined","size","viewPort","yMin","yMax","start","end","SECOND_IN_MS","MINUTE_IN_MS","HOUR_IN_MS","DAY_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","_a","viewPortDurationMS","toLocaleString","second","hour12","month","year"],"mappings":"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","file":"static/js/stencil-monitor-webgl-bar-chart-dynamic-data-streams-entry-js.f0f41402.chunk.js","sourcesContent":["var Y_MIN = 0;\nvar Y_MAX = 5000;\nvar X_MIN = new Date(2000, 0, 0, 0, 0);\nvar X_MAX = new Date(2000, 0, 0, 0, 10);\nvar Y_VALUE = 2500;\n// test data point dead center of the viewport\nvar TEST_DATA_POINT_STANDARD = {\n    x: new Date((X_MIN.getTime() + X_MAX.getTime()) / 2),\n    y: Y_VALUE,\n};\nexport { TEST_DATA_POINT_STANDARD as T, X_MIN as X, Y_VALUE as Y, Y_MIN as a, Y_MAX as b, X_MAX as c };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h } from './index-326b73e4.js';\nimport { a as MONTH_IN_MS } from './time-cc688558.js';\nimport { Y as Y_VALUE } from './constants-444fb3be.js';\n// viewport boundaries\nvar Y_MIN = 0;\nvar Y_MAX = 5000;\nvar X_MIN = new Date(2000, 0);\nvar X_MAX = new Date(2001, 3);\nvar LEFT_X = new Date(2000, 3);\nvar MIDDLE_X = new Date(2000, 7);\nvar RIGHT_X = new Date(2000, 11);\nvar MonitorWebglBarChartDynamicDataStreams = /** @class */ (function () {\n    function MonitorWebglBarChartDynamicDataStreams(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.dataStreams = [];\n        this.dataStreamInfo = [];\n        this.colorIndex = 0;\n        this.colors = ['#264653', '#2a9d8f', '#e9c46a', '#f4a261', '#e76f51'];\n        this.increaseColorIndex = function () {\n            _this.colorIndex += 1;\n        };\n        this.getColor = function () {\n            // Modding the  will cycle through the colors array when the color index becomes greater than\n            // the colors array length\n            return _this.colors[_this.colorIndex % _this.colors.length];\n        };\n        this.addStream = function () {\n            var leftPoint = {\n                x: LEFT_X,\n                y: Y_VALUE,\n            };\n            var middlePoint = {\n                x: MIDDLE_X,\n                y: Y_VALUE,\n            };\n            var rightPoint = {\n                x: RIGHT_X,\n                y: Y_VALUE,\n            };\n            var streamId = \"stream-\" + (_this.dataStreams.length + 1);\n            _this.dataStreams = __spreadArrays(_this.dataStreams, [\n                {\n                    id: streamId,\n                    data: [leftPoint, middlePoint, rightPoint],\n                    resolution: MONTH_IN_MS,\n                },\n            ]);\n            _this.dataStreamInfo = __spreadArrays(_this.dataStreamInfo, [\n                {\n                    id: streamId,\n                    color: _this.getColor(),\n                    name: streamId + \"-name\",\n                },\n            ]);\n            _this.increaseColorIndex();\n        };\n        this.removeStream = function () {\n            _this.dataStreamInfo.pop();\n            _this.dataStreams.pop();\n            _this.dataStreamInfo = __spreadArrays(_this.dataStreamInfo);\n            _this.dataStreams = __spreadArrays(_this.dataStreams);\n            _this.colorIndex -= 1;\n        };\n    }\n    MonitorWebglBarChartDynamicDataStreams.prototype.render = function () {\n        return (h(\"div\", null, h(\"button\", { id: \"add-stream\", onClick: this.addStream }, \"Add Stream\"), h(\"button\", { id: \"remove-stream\", onClick: this.removeStream }, \"Remove Stream\"), h(\"br\", null), h(\"br\", null), h(\"div\", { id: \"chart-container\", style: { marginTop: '20px', width: '500px', height: '500px' } }, h(\"monitor-bar-chart\", { data: this.dataStreams, config: {\n                id: 'test-id',\n                legend: undefined,\n                size: {\n                    width: 500,\n                    height: 500,\n                },\n                dataStreamInfo: this.dataStreamInfo,\n                viewPort: { yMin: Y_MIN, yMax: Y_MAX, start: X_MIN, end: X_MAX },\n            } })), h(\"monitor-webgl-context\", null)));\n    };\n    return MonitorWebglBarChartDynamicDataStreams;\n}());\nexport { MonitorWebglBarChartDynamicDataStreams as monitor_webgl_bar_chart_dynamic_data_streams };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}