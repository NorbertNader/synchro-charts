{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/monitor-webgl-bar-chart-start-from-zero.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["X_MIN","Date","X_MAX","MonitorWebglBarChartStartFromZero","hostRef","_this","this","registerInstance","testData","x","getTime","y","changeDataDirection","map","_a","prototype","render","h","id","onClick","style","width","height","data","resolution","MINUTE_IN_MS","config","size","dataStreamInfo","color","name","viewPort","start","end","SECOND_IN_MS","HOUR_IN_MS","DAY_IN_MS","MONTH_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","viewPortDurationMS","toLocaleString","second","hour12","month","year"],"mappings":"kJAAA,kGAEIA,EAAQ,IAAIC,KAAK,IAAM,EAAG,EAAG,EAAG,GAChCC,EAAQ,IAAID,KAAK,IAAM,EAAG,EAAG,EAAG,IAChCE,EAAmD,WACnD,SAASA,EAAkCC,GACvC,IAAIC,EAAQC,KACZC,YAAiBD,KAAMF,GACvBE,KAAKE,SAAW,CACZ,CACIC,EAAG,IAAIR,MAAMD,EAAMU,UAAYR,EAAMQ,WAAa,GAClDC,EAAG,OAGXL,KAAKM,oBAAsB,WACvBP,EAAMG,SAAWH,EAAMG,SAASK,KAAI,SAAUC,GAE1C,MAAO,CACHL,EAFIK,EAAGL,EAGPE,GAHcG,EAAGH,OAyBjC,OAjBAR,EAAkCY,UAAUC,OAAS,WACjD,OAAQC,YAAE,MAAO,KAAMA,YAAE,SAAU,CAAEC,GAAI,wBAAyBC,QAASb,KAAKM,qBAAuB,yBAA0BK,YAAE,KAAM,MAAOA,YAAE,KAAM,MAAOA,YAAE,MAAO,CAAEC,GAAI,kBAAmBE,MAAO,CAAEC,MAAO,QAASC,OAAQ,UAAaL,YAAE,oBAAqB,CAAEM,KAAM,CAAC,CAAEL,GAAI,OAAQK,KAAMjB,KAAKE,SAAUgB,WAAYC,MAAiBC,OAAQ,CAC/UR,GAAI,UACJS,KAAM,CACFN,MAAO,IACPC,OAAQ,KAEZM,eAAgB,CACZ,CACIV,GAAI,OACJW,MAAO,SACPC,KAAM,gBAGdC,SAAU,CAAEC,MAAOhC,EAAOiC,IAAK/B,MAC7Be,YAAE,wBAAyB,SAElCd,EArC4C,I,gCCJvD,oRAAI+B,EAAe,IACfT,EAAe,GAAKS,EACpBC,EAAa,GAAKV,EAClBW,EAAY,GAAKD,EAEjBE,EAAc,GAAKD,EACnBE,EAAa,GAAKD,EAyBlBE,EAAY,SAAUC,GACtB,GAAIA,EAAe,EACf,MAAM,IAAIC,MAAM,4BAEpB,IAAIC,EAAUC,KAAKC,MAAMJ,EAAe,KACpCK,EAASF,KAAKC,MAAMF,EAAU,IAC9BI,EAAOH,KAAKC,MAAMC,EAAS,IAK/B,MAAO,CACHE,IALMJ,KAAKC,MAAME,EAAO,IAMxBA,KAHJA,GAAQ,GAIJD,OALJA,GAAU,GAMNH,QAPJA,GAAW,KAUXM,EAAc,SAAUC,EAAMzB,EAAYV,GAC1C,IAAIkB,EAAQlB,EAAGkB,MAAOC,EAAMnB,EAAGmB,IAC/B,GAAIT,EAAaY,EAAW,CACxB,IAAIc,EAAqBjB,EAAIvB,UAAYsB,EAAMtB,UAC/C,OAAIwC,EAAqBzB,EACdwB,EAAKE,eAAe,QAAS,CAChCN,OAAQ,UACRO,OAAQ,YAGZF,EAAqB,GAAKzB,EACnBwB,EAAKE,eAAe,QAAS,CAChCL,KAAM,UACND,OAAQ,UACRO,OAAQ,UACRC,QAAQ,IAGTJ,EAAKE,eAAe,QAAS,CAChCL,KAAM,UACND,OAAQ,UACRQ,QAAQ,IAGhB,OAAI7B,GAAcW,EACPc,EAAKE,eAAe,QAAS,CAChCL,KAAM,UACNC,IAAK,OACLM,QAAQ,IAGZ7B,GAAcY,EACPa,EAAKE,eAAe,QAAS,CAChCJ,IAAK,UACLO,MAAO,SAGRL,EAAKE,eAAe,QAAS,CAChCI,KAAM,UACND,MAAO","file":"static/js/stencil-monitor-webgl-bar-chart-start-from-zero-entry-js.8999c33b.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-326b73e4.js';\nimport { M as MINUTE_IN_MS } from './time-cc688558.js';\nvar X_MIN = new Date(2000, 0, 0, 0, 0);\nvar X_MAX = new Date(2000, 0, 0, 0, 10);\nvar MonitorWebglBarChartStartFromZero = /** @class */ (function () {\n    function MonitorWebglBarChartStartFromZero(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.testData = [\n            {\n                x: new Date((X_MIN.getTime() + X_MAX.getTime()) / 2),\n                y: 4500,\n            },\n        ];\n        this.changeDataDirection = function () {\n            _this.testData = _this.testData.map(function (_a) {\n                var x = _a.x, y = _a.y;\n                return {\n                    x: x,\n                    y: -y,\n                };\n            });\n        };\n    }\n    MonitorWebglBarChartStartFromZero.prototype.render = function () {\n        return (h(\"div\", null, h(\"button\", { id: \"change-data-direction\", onClick: this.changeDataDirection }, \"Change Data Direction\"), h(\"br\", null), h(\"br\", null), h(\"div\", { id: \"chart-container\", style: { width: '500px', height: '500px' } }, h(\"monitor-bar-chart\", { data: [{ id: 'test', data: this.testData, resolution: MINUTE_IN_MS }], config: {\n                id: 'test-id',\n                size: {\n                    width: 500,\n                    height: 500,\n                },\n                dataStreamInfo: [\n                    {\n                        id: 'test',\n                        color: 'purple',\n                        name: 'test stream',\n                    },\n                ],\n                viewPort: { start: X_MIN, end: X_MAX },\n            } }), h(\"monitor-webgl-context\", null))));\n    };\n    return MonitorWebglBarChartStartFromZero;\n}());\nexport { MonitorWebglBarChartStartFromZero as monitor_webgl_bar_chart_start_from_zero };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}