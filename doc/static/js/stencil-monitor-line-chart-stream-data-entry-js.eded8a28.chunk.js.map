{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/monitor-line-chart-stream-data.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/constants-2dc21ff9.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js","../node_modules/@amzn/bp-components/dist/esm-es5/chartDefaults-5713566e.js","../node_modules/@amzn/bp-components/dist/esm-es5/palettes-cbce0fc6.js","../node_modules/@amzn/bp-components/dist/esm-es5/testConfigs-669c3f25.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","_a","TESTING_GROUND_CHART_CONFIG","viewPort","X_MIN","start","X_MAX","end","TEST_DATA_POINT","x","Date","getTime","y","urlParams","URLSearchParams","window","location","search","dataPerRoundParam","get","roundFrequencyParam","viewportSpeedParam","DATA_SIZE_BATCH","Number","parseInt","DATA_FREQUENCY_MS","SECOND_IN_MS","VIEWPORT_SPEED","MonitorLineChartStreamData","hostRef","_this","this","registerInstance","dataPoints","Object","assign","yMin","yMax","viewPortLoop","requestAnimationFrame","viewPortShifter","prototype","componentWillLoad","dataLoop","setInterval","point","fill","map","_","componentDidUnload","clearInterval","cancelAnimationFrame","render","h","id","style","border","height","width","data","resolution","config","legend","undefined","size","dataStreamInfo","color","name","ScaleType","LEGEND_POSITION","MINUTE_IN_MS","HOUR_IN_MS","DAY_IN_MS","MONTH_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","viewPortDurationMS","toLocaleString","second","hour12","month","year","DEFAULT_CHART_CONFIG","marginLeft","marginRight","marginTop","marginBottom","movement","enableXScroll","enableYScroll","zoomMax","Infinity","zoomMin","layout","xGridVisible","yGridVisible","xTicksVisible","yTicksVisible","scale","xScaleType","TimeSeries","yScaleType","Linear","xScaleSide","yScaleSide","position","BOTTOM","PalletScheme","PALLET_MAP","BLUE_MUTED","QUALITATIVE_MUTED","getPalette","pallet","numColors","colors","infos","detailedName","unit"],"mappings":"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","file":"static/js/stencil-monitor-line-chart-stream-data-entry-js.eded8a28.chunk.js","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h } from './index-326b73e4.js';\nimport './constants-2dc21ff9.js';\nimport { S as SECOND_IN_MS } from './time-cc688558.js';\nimport './palettes-cbce0fc6.js';\nimport './chartDefaults-5713566e.js';\nimport { T as TESTING_GROUND_CHART_CONFIG } from './testConfigs-669c3f25.js';\n// viewport boundaries\nvar Y_MIN = 0;\nvar Y_MAX = 5000;\nvar _a = TESTING_GROUND_CHART_CONFIG.viewPort, X_MIN = _a.start, X_MAX = _a.end;\n// test data point dead center of the viewport\nvar TEST_DATA_POINT = {\n    x: new Date((X_MIN.getTime() + X_MAX.getTime()) / 2),\n    y: (Y_MIN + Y_MAX) / 2,\n};\nvar urlParams = new URLSearchParams(window.location.search);\nvar dataPerRoundParam = urlParams.get('dataPerRound');\nvar roundFrequencyParam = urlParams.get('roundFrequency');\nvar viewportSpeedParam = urlParams.get('viewPortSpeed');\nvar DATA_SIZE_BATCH = dataPerRoundParam ? Number.parseInt(dataPerRoundParam, 10) : 1;\nvar DATA_FREQUENCY_MS = roundFrequencyParam ? Number.parseInt(roundFrequencyParam, 10) : SECOND_IN_MS;\nvar VIEWPORT_SPEED = viewportSpeedParam ? Number.parseInt(viewportSpeedParam, 10) : 0;\nvar createData = function (point) { return new Array(DATA_SIZE_BATCH).fill(0).map(function (_, i) { return ({\n    x: point.x,\n    y: point.y + i,\n}); }); };\nvar MonitorLineChartStreamData = /** @class */ (function () {\n    function MonitorLineChartStreamData(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.dataPoints = [TEST_DATA_POINT];\n        this.viewPort = Object.assign(Object.assign({}, TESTING_GROUND_CHART_CONFIG.viewPort), { yMin: Y_MIN, yMax: Y_MAX });\n        this.viewPortLoop = function () { return window.requestAnimationFrame(function () {\n            _this.viewPort = Object.assign(Object.assign({}, _this.viewPort), { start: new Date(_this.viewPort.start.getTime() + VIEWPORT_SPEED), end: new Date(_this.viewPort.end.getTime() + VIEWPORT_SPEED) });\n            _this.viewPortShifter = _this.viewPortLoop();\n        }); };\n    }\n    MonitorLineChartStreamData.prototype.componentWillLoad = function () {\n        var _this = this;\n        if (VIEWPORT_SPEED > 0) {\n            this.viewPortShifter = this.viewPortLoop();\n        }\n        this.dataLoop = window.setInterval(function () {\n            _this.dataPoints = __spreadArrays(_this.dataPoints, createData({\n                x: new Date((_this.dataPoints[_this.dataPoints.length - 1].x.getTime() + X_MAX.getTime()) / 2),\n                y: TEST_DATA_POINT.y,\n            }));\n        }, DATA_FREQUENCY_MS);\n    };\n    MonitorLineChartStreamData.prototype.componentDidUnload = function () {\n        clearInterval(this.dataLoop);\n        if (this.viewPortShifter != null) {\n            window.cancelAnimationFrame(this.viewPortShifter);\n        }\n    };\n    MonitorLineChartStreamData.prototype.render = function () {\n        return (h(\"div\", { id: \"chart-container\", style: { border: '1px solid lightgray', height: '500px', width: '500px' } }, h(\"monitor-line-chart\", { data: [{ id: 'test', data: this.dataPoints, resolution: 0 }], config: Object.assign(Object.assign({}, TESTING_GROUND_CHART_CONFIG), { legend: undefined, size: Object.assign(Object.assign({}, TESTING_GROUND_CHART_CONFIG.size), { height: 500, width: 500 }), dataStreamInfo: [\n                    {\n                        id: 'test',\n                        color: 'black',\n                        name: 'test stream',\n                    },\n                ], viewPort: this.viewPort }) }), h(\"monitor-webgl-context\", null)));\n    };\n    return MonitorLineChartStreamData;\n}());\nexport { MonitorLineChartStreamData as monitor_line_chart_stream_data };\n","// NOTE: `enum`s are held separately from the types which are exported\n// as part of the package, since `enum`'s cannot be present in a type declaration file.\n// THis is due to an `enum` being a type plus an implementation, while type declaration\n// files can only contain typing information.\n/**\n * Maps the view model to d3 axis types. In the future we could add additional\n * custom scale types beyond what's available in `d3-axis`.\n */\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"TimeSeries\"] = \"time-series\";\n    ScaleType[\"Log\"] = \"log\";\n    ScaleType[\"Linear\"] = \"linear\";\n})(ScaleType || (ScaleType = {}));\nvar LEGEND_POSITION;\n(function (LEGEND_POSITION) {\n    LEGEND_POSITION[\"RIGHT\"] = \"RIGHT\";\n    LEGEND_POSITION[\"BOTTOM\"] = \"BOTTOM\";\n})(LEGEND_POSITION || (LEGEND_POSITION = {}));\nexport { LEGEND_POSITION as L, ScaleType as S };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n","import { S as ScaleType, L as LEGEND_POSITION } from './constants-2dc21ff9.js';\nvar DEFAULT_CHART_CONFIG = {\n    id: 'fake-id',\n    viewPort: {\n        start: new Date(1995, 0, 0, 0),\n        end: new Date(2020, 1, 0, 0),\n        yMin: 0,\n        yMax: 10000,\n    },\n    // width is width - marginLeft - marginRight\n    size: { width: 400 + 50 + 25, height: 350, marginLeft: 50, marginRight: 50, marginTop: 8, marginBottom: 30 },\n    movement: {\n        enableXScroll: true,\n        enableYScroll: false,\n        zoomMax: Infinity,\n        zoomMin: 0.00001,\n    },\n    layout: {\n        xGridVisible: false,\n        yGridVisible: true,\n        xTicksVisible: true,\n        yTicksVisible: true,\n    },\n    scale: {\n        xScaleType: ScaleType.TimeSeries,\n        yScaleType: ScaleType.Linear,\n        xScaleSide: 'bottom',\n        yScaleSide: 'left',\n    },\n    dataStreamInfo: [],\n    legend: {\n        position: LEGEND_POSITION.BOTTOM,\n        width: 180,\n    },\n};\nexport { DEFAULT_CHART_CONFIG as D };\n","var _a;\nvar SEQUENTIAL_BLUES_MUTED = [\n    ['#5e87b5'],\n    ['#5e87b5', '#b8c6df'],\n    ['#5e87b5', '#9cb1d2', '#d4dced'],\n    ['#5e87b5', '#88a2c8', '#aebfda', '#d4dced'],\n    ['#5e87b5', '#7e9bc3', '#9cb1d2', '#b8c6df', '#d4dced'],\n    ['#5e87b5', '#769dd2', '#96b2dd', '#b4c7e9', '#d4dced', '#eff2fb'],\n];\nvar SEQUENTIAL_QUALITATIVE_MUTED = [\n    ['#5e87b5'],\n    ['#5e87b5', '#e6ac8c'],\n    ['#5e87b5', '#e6ac8c', '#7fc6b1'],\n    ['#5e87b5', '#e6ac8c', '#7fc6b1', '#d99090'],\n    ['#5e87b5', '#e6ac8c', '#7fc6b1', '#d99090', '#ae779c'],\n    ['#5e87b5', '#e6ac8c', '#7fc6b1', '#d99090', '#ae779c', '#f9da95'],\n];\nvar PalletScheme;\n(function (PalletScheme) {\n    PalletScheme[\"BLUE_MUTED\"] = \"blue-MUTED\";\n    PalletScheme[\"QUALITATIVE_MUTED\"] = \"qualitative-muted\";\n})(PalletScheme || (PalletScheme = {}));\nvar PALLET_MAP = (_a = {},\n    _a[PalletScheme.BLUE_MUTED] = SEQUENTIAL_BLUES_MUTED,\n    _a[PalletScheme.QUALITATIVE_MUTED] = SEQUENTIAL_QUALITATIVE_MUTED,\n    _a);\nvar getPalette = function (pallet, numColors) {\n    var palletSchemes = PALLET_MAP[pallet];\n    var colors = palletSchemes[numColors - 1];\n    if (colors == null) {\n        throw new Error('Cannot add more than 6 data streams');\n    }\n    return colors;\n};\nexport { PalletScheme as P, getPalette as g };\n","import { g as getPalette, P as PalletScheme } from './palettes-cbce0fc6.js';\nimport { D as DEFAULT_CHART_CONFIG } from './chartDefaults-5713566e.js';\nvar pallet = getPalette(PalletScheme.QUALITATIVE_MUTED, 5);\nvar infos = [\n    {\n        id: 'some-id',\n        name: 'high',\n        detailedName: '/amazon/stocks/high',\n        color: pallet[0],\n        unit: 'USD',\n    },\n];\n// DO NOT USE THIS IN UNIT TESTS. FOR TESTING GROUND ONLY!\n// NOTE: Need to iterate on the typing for charts so that a chart config externally doesn't require\n//  a viewport y range, but internally it does.\n// @ts-ignore\nvar TESTING_GROUND_CHART_CONFIG = {\n    id: 'fake-id',\n    legend: DEFAULT_CHART_CONFIG.legend,\n    viewPort: {\n        start: new Date(1998, 0, 0),\n        end: new Date(2000, 0, 1),\n    },\n    dataStreamInfo: infos,\n};\nexport { TESTING_GROUND_CHART_CONFIG as T };\n"],"sourceRoot":""}