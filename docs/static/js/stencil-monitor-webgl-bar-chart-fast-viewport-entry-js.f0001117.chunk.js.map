{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/monitor-webgl-bar-chart-fast-viewport.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["X_MIN","Date","X_MAX","TEST_DATA_POINT","Array","from","length","_","index","x","y","MonitorWebglBarChartFastViewport","hostRef","_this","this","registerInstance","dataStreams","dataStreamInfo","colorIndex","start","end","idx","timeRange","changeViewport","_a","prototype","render","h","id","onClick","style","border","height","width","data","resolution","HOUR_IN_MS","config","size","color","name","viewPort","yMin","yMax","SECOND_IN_MS","MINUTE_IN_MS","DAY_IN_MS","MONTH_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","viewPortDurationMS","getTime","toLocaleString","second","hour12","month","year"],"mappings":"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","file":"static/js/stencil-monitor-webgl-bar-chart-fast-viewport-entry-js.f0001117.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-326b73e4.js';\nimport { H as HOUR_IN_MS } from './time-cc688558.js';\n// viewport boundaries\nvar Y_MIN = 0;\nvar Y_MAX = 5000;\nvar X_MIN = new Date(1999, 9, 0, 0, 0);\nvar X_MAX = new Date(2000, 2, 0, 0, 10);\n// test data point dead center of the viewport\nvar TEST_DATA_POINT = Array.from({ length: 50 }, function (_, index) {\n    return {\n        x: new Date(2000, 0, index, 0, 0),\n        y: (Y_MIN + Y_MAX) / 2,\n    };\n});\nvar MonitorWebglBarChartFastViewport = /** @class */ (function () {\n    function MonitorWebglBarChartFastViewport(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.dataStreams = [];\n        this.dataStreamInfo = [];\n        this.colorIndex = 0;\n        this.start = X_MIN;\n        this.end = X_MAX;\n        this.idx = 0;\n        this.timeRange = [\n            [new Date(2000, 2, 0, 0, 0), new Date(2000, 3, 0, 0, 0)],\n            [new Date(2010, 4, 0, 0, 0), new Date(2020, 5, 0, 0, 0)],\n            [new Date(2030, 6, 0, 0, 0), new Date(2040, 7, 0, 0, 0)],\n            [X_MIN, X_MAX],\n        ];\n        this.changeViewport = function () {\n            var _a = _this.timeRange[_this.idx % _this.timeRange.length], start = _a[0], end = _a[1];\n            _this.start = start;\n            _this.end = end;\n            _this.idx += 1;\n        };\n    }\n    MonitorWebglBarChartFastViewport.prototype.render = function () {\n        return (h(\"div\", null, h(\"button\", { id: \"change-viewport\", onClick: this.changeViewport }, \"Change Viewport\"), h(\"br\", null), h(\"br\", null), h(\"div\", { id: \"chart-container\", style: { border: '1px solid lightgray', height: '500px', width: '500px' } }, h(\"monitor-bar-chart\", { data: [{ id: 'test', data: TEST_DATA_POINT, resolution: HOUR_IN_MS }], config: {\n                id: 'test-id',\n                size: {\n                    height: 500,\n                    width: 500,\n                },\n                dataStreamInfo: [\n                    {\n                        id: 'test',\n                        color: '#264653',\n                        name: 'test stream',\n                    },\n                ],\n                viewPort: {\n                    yMin: Y_MIN,\n                    yMax: Y_MAX,\n                    start: this.start,\n                    end: this.end,\n                },\n            } }), h(\"monitor-webgl-context\", null))));\n    };\n    return MonitorWebglBarChartFastViewport;\n}());\nexport { MonitorWebglBarChartFastViewport as monitor_webgl_bar_chart_fast_viewport };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}