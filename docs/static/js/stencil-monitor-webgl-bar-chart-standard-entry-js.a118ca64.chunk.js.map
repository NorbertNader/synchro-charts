{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/constants-444fb3be.js","../node_modules/@amzn/bp-components/dist/esm-es5/monitor-webgl-bar-chart-standard.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["Y_MIN","Y_MAX","X_MIN","Date","X_MAX","Y_VALUE","TEST_DATA_POINT_STANDARD","x","getTime","y","MonitorWebglBarChartStandard","hostRef","registerInstance","this","prototype","render","h","data","id","resolution","MINUTE_IN_MS","config","size","width","height","dataStreamInfo","color","name","viewPort","yMin","yMax","start","end","SECOND_IN_MS","HOUR_IN_MS","DAY_IN_MS","MONTH_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","_a","viewPortDurationMS","toLocaleString","second","hour12","month","year"],"mappings":"mJAAA,gNAAIA,EAAQ,EACRC,EAAQ,IACRC,EAAQ,IAAIC,KAAK,IAAM,EAAG,EAAG,EAAG,GAChCC,EAAQ,IAAID,KAAK,IAAM,EAAG,EAAG,EAAG,IAChCE,EAAU,KAEVC,EAA2B,CAC3BC,EAAG,IAAIJ,MAAMD,EAAMM,UAAYJ,EAAMI,WAAa,GAClDC,EAAGJ,I,gCCRP,oGAGIK,EAA8C,WAC9C,SAASA,EAA6BC,GAClCC,YAAiBC,KAAMF,GAmB3B,OAjBAD,EAA6BI,UAAUC,OAAS,WAC5C,OAAQC,YAAE,MAAO,KAAMA,YAAE,oBAAqB,CAAEC,KAAM,CAAC,CAAEC,GAAI,OAAQD,KAAM,CAACX,KAA2Ba,WAAYC,MAAiBC,OAAQ,CACpIH,GAAI,UACJI,KAAM,CACFC,MAAO,IACPC,OAAQ,KAEZC,eAAgB,CACZ,CACIP,GAAI,OACJQ,MAAO,QACPC,KAAM,gBAGdC,SAAU,CAAEC,KAAM7B,IAAO8B,KAAM7B,IAAO8B,MAAO7B,IAAO8B,IAAK5B,QACvDY,YAAE,wBAAyB,QAElCN,EArBuC,I,gCCHlD,oRAAIuB,EAAe,IACfb,EAAe,GAAKa,EACpBC,EAAa,GAAKd,EAClBe,EAAY,GAAKD,EAEjBE,EAAc,GAAKD,EACnBE,EAAa,GAAKD,EAyBlBE,EAAY,SAAUC,GACtB,GAAIA,EAAe,EACf,MAAM,IAAIC,MAAM,4BAEpB,IAAIC,EAAUC,KAAKC,MAAMJ,EAAe,KACpCK,EAASF,KAAKC,MAAMF,EAAU,IAC9BI,EAAOH,KAAKC,MAAMC,EAAS,IAK/B,MAAO,CACHE,IALMJ,KAAKC,MAAME,EAAO,IAMxBA,KAHJA,GAAQ,GAIJD,OALJA,GAAU,GAMNH,QAPJA,GAAW,KAUXM,EAAc,SAAUC,EAAM7B,EAAY8B,GAC1C,IAAIlB,EAAQkB,EAAGlB,MAAOC,EAAMiB,EAAGjB,IAC/B,GAAIb,EAAagB,EAAW,CACxB,IAAIe,EAAqBlB,EAAIxB,UAAYuB,EAAMvB,UAC/C,OAAI0C,EAAqB9B,EACd4B,EAAKG,eAAe,QAAS,CAChCP,OAAQ,UACRQ,OAAQ,YAGZF,EAAqB,GAAK9B,EACnB4B,EAAKG,eAAe,QAAS,CAChCN,KAAM,UACND,OAAQ,UACRQ,OAAQ,UACRC,QAAQ,IAGTL,EAAKG,eAAe,QAAS,CAChCN,KAAM,UACND,OAAQ,UACRS,QAAQ,IAGhB,OAAIlC,GAAce,EACPc,EAAKG,eAAe,QAAS,CAChCN,KAAM,UACNC,IAAK,OACLO,QAAQ,IAGZlC,GAAcgB,EACPa,EAAKG,eAAe,QAAS,CAChCL,IAAK,UACLQ,MAAO,SAGRN,EAAKG,eAAe,QAAS,CAChCI,KAAM,UACND,MAAO","file":"static/js/stencil-monitor-webgl-bar-chart-standard-entry-js.a118ca64.chunk.js","sourcesContent":["var Y_MIN = 0;\nvar Y_MAX = 5000;\nvar X_MIN = new Date(2000, 0, 0, 0, 0);\nvar X_MAX = new Date(2000, 0, 0, 0, 10);\nvar Y_VALUE = 2500;\n// test data point dead center of the viewport\nvar TEST_DATA_POINT_STANDARD = {\n    x: new Date((X_MIN.getTime() + X_MAX.getTime()) / 2),\n    y: Y_VALUE,\n};\nexport { TEST_DATA_POINT_STANDARD as T, X_MIN as X, Y_VALUE as Y, Y_MIN as a, Y_MAX as b, X_MAX as c };\n","import { r as registerInstance, h } from './index-326b73e4.js';\nimport { M as MINUTE_IN_MS } from './time-cc688558.js';\nimport { T as TEST_DATA_POINT_STANDARD, a as Y_MIN, b as Y_MAX, X as X_MIN, c as X_MAX } from './constants-444fb3be.js';\nvar MonitorWebglBarChartStandard = /** @class */ (function () {\n    function MonitorWebglBarChartStandard(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    MonitorWebglBarChartStandard.prototype.render = function () {\n        return (h(\"div\", null, h(\"monitor-bar-chart\", { data: [{ id: 'test', data: [TEST_DATA_POINT_STANDARD], resolution: MINUTE_IN_MS }], config: {\n                id: 'test-id',\n                size: {\n                    width: 500,\n                    height: 500,\n                },\n                dataStreamInfo: [\n                    {\n                        id: 'test',\n                        color: 'black',\n                        name: 'test stream',\n                    },\n                ],\n                viewPort: { yMin: Y_MIN, yMax: Y_MAX, start: X_MIN, end: X_MAX },\n            } }), h(\"monitor-webgl-context\", null)));\n    };\n    return MonitorWebglBarChartStandard;\n}());\nexport { MonitorWebglBarChartStandard as monitor_webgl_bar_chart_standard };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}