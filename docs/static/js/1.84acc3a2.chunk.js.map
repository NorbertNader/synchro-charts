{"version":3,"sources":["../node_modules/webpack/buildin/global.js","../node_modules/@amzn/bp-components/dist/esm-es5/dataActions-86811a77.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["g","this","Function","e","window","module","exports","_d","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","getDataStreamStore","dataStreamId","resolution","store","resolutionCache","_isPlaceholder","_curry1","fn","f1","apply","_curry2","f2","b","_b","_a","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","curryN","_curryN","received","combined","argsIdx","left","combinedIdx","_curry3","f3","c","_c","_isArray","isArray","val","Object","prototype","toString","call","_isTransformer","obj","_dispatchable","methodNames","xf","args","slice","pop","transducer","_xfBase","init","max","_map","functor","len","_isString","x","_isArrayLike","nodeType","hasOwnProperty","XWrap","f","acc","bind","thisObj","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","list","_xwrap","_arrayReduce","reduce","TypeError","XMap","input","_xmap","_has","prop","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","map","key","path","paths","p","pluck","XAny","any","ap","applyF","applyX","_aperture","limit","XAperture","pos","full","getCopy","aperture","values","props","vals","applySpec","spec","v","isNil","_isFunction","liftN","arity","lifted","lift","_flatCat","rxf","ret","preservingReduced","chain","monad","recursive","flatt","jlen","ilen","type","undefined","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","_arrayFromIterator","push","_containsWith","pred","identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","match","String","_functionName","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","keysA","extendedStackA","extendedStackB","_contains","inf","indexOf","_indexOf","_quote","replace","pad","_toISOString","Date","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_isObject","XFilter","filter","filterable","_filter","reject","toString$1","_toString","seen","recur","y","xs","mapPairs","sort","join","test","isNaN","NaN","repr","converge","after","fns","context","XDrop","drop","Math","nth","offset","charAt","XDropWhile","dropWhile","or","either","empty","groupWith","res","nextidx","head","_identity","isEmpty","nthArg","sortBy","aa","bb","unfold","seed","pair","unnest","__rest","t","getOwnPropertySymbols","isOverlappingSimple","start","end","beforeOrAdjTo","afterInt","beforeInt","propFromNthArg","propName","simplifyPipe","ranges","simplify","intervals","intersectUnfolder","inters1","inters2","newInters1","inter1","newInters2","i1","i2","inter2","minMaxInter","assign","min","intersect","intervalsA","intervalsB","subtractInter","mask","base","boundaries","rest","prepRanges","r1","r2","complement","toObjectNotation","toIntervalNotation","isBeforeInterval","_e","isIntersecting","aStart","isAfterInterval","subtractIntervals","interval","sortedIntervals","subtractedIntervals","intersection","substract","inter","addInterval","intervalStructure","items","compare","overlappingIntervals","index","combinedInterval","mergedInterval","currInterval","combinedItems","mergedItems","aItems","bItems","itemsBeforeA","itemsAfterA","mergeItems","findIndex","int","insertIndex","updatedIntervals","splice","updatedItems","getExpiredCacheIntervals","ttlDurationMapping","requestedAt","sortedCaches","duration","Number","ttl","reverse","now","timeSinceRequest","getTime","caches","aIntervals","bIntervals","expiredIntervals","REQUEST_PER_MS","SECOND_IN_MS","TTL_DURATION_CACHE_RULES","MINUTE_IN_MS","getDateRangesToRequest","streamStore","cacheIntervals","expiredCacheIntervals","requestHistory","historicalRequest","flat","requestCache","unexpiredCacheIntervals","startMS","endMS","dataPointCompare","aTime","bTime","EMPTY_CACHE","addToDataPointCache","data","cache","REQUEST","onRequest","payload","dispatch","getState","first","last","id","dateRanges","forEach","onRequestAction","ERROR","onError","error","onErrorAction","SUCCESS","onSuccess","onSuccessAction","HOUR_IN_MS","DAY_IN_MS","MONTH_IN_MS","YEAR_IN_MS","convertMS","milliseconds","seconds","floor","minute","hour","day","displayDate","date","viewPortDurationMS","toLocaleString","second","hour12","month","year"],"mappings":"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","file":"static/js/1.84acc3a2.chunk.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar _d;\nimport { S as SECOND_IN_MS, M as MINUTE_IN_MS } from './time-cc688558.js';\nvar getDataStreamStore = function (dataStreamId, resolution, store) {\n    var resolutionCache = store[dataStreamId];\n    if (resolutionCache == null) {\n        return undefined;\n    }\n    return resolutionCache[resolution];\n};\nfunction _isPlaceholder(a) {\n    return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curry1(fn) {\n    return function f1(a) {\n        if (arguments.length === 0 || _isPlaceholder(a)) {\n            return f1;\n        }\n        else {\n            return fn.apply(this, arguments);\n        }\n    };\n}\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curry2(fn) {\n    return function f2(a, b) {\n        switch (arguments.length) {\n            case 0:\n                return f2;\n            case 1:\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                    return fn(a, _b);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b);\n                }) : fn(a, b);\n        }\n    };\n}\n/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nfunction _concat(set1, set2) {\n    set1 = set1 || [];\n    set2 = set2 || [];\n    var idx;\n    var len1 = set1.length;\n    var len2 = set2.length;\n    var result = [];\n    idx = 0;\n    while (idx < len1) {\n        result[result.length] = set1[idx];\n        idx += 1;\n    }\n    idx = 0;\n    while (idx < len2) {\n        result[result.length] = set2[idx];\n        idx += 1;\n    }\n    return result;\n}\nfunction _arity(n, fn) {\n    /* eslint-disable no-unused-vars */\n    switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n    }\n}\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curryN(length, received, fn) {\n    return function () {\n        var combined = [];\n        var argsIdx = 0;\n        var left = length;\n        var combinedIdx = 0;\n        while (combinedIdx < received.length || argsIdx < arguments.length) {\n            var result;\n            if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                result = received[combinedIdx];\n            }\n            else {\n                result = arguments[argsIdx];\n                argsIdx += 1;\n            }\n            combined[combinedIdx] = result;\n            if (!_isPlaceholder(result)) {\n                left -= 1;\n            }\n            combinedIdx += 1;\n        }\n        return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n    };\n}\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/ _curry2(function curryN(length, fn) {\n    if (length === 1) {\n        return _curry1(fn);\n    }\n    return _arity(length, _curryN(length, [], fn));\n});\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curry3(fn) {\n    return function f3(a, b, c) {\n        switch (arguments.length) {\n            case 0:\n                return f3;\n            case 1:\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                });\n            case 2:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _curry1(function (_c) {\n                    return fn(a, b, _c);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                    return fn(_a, _b, c);\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b, c);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b, c);\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                    return fn(a, b, _c);\n                }) : fn(a, b, c);\n        }\n    };\n}\n/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nvar _isArray = Array.isArray || function _isArray(val) {\n    return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};\nfunction _isTransformer(obj) {\n    return typeof obj['@@transducer/step'] === 'function';\n}\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nfunction _dispatchable(methodNames, xf, fn) {\n    return function () {\n        if (arguments.length === 0) {\n            return fn();\n        }\n        var args = Array.prototype.slice.call(arguments, 0);\n        var obj = args.pop();\n        if (!_isArray(obj)) {\n            var idx = 0;\n            while (idx < methodNames.length) {\n                if (typeof obj[methodNames[idx]] === 'function') {\n                    return obj[methodNames[idx]].apply(obj, args);\n                }\n                idx += 1;\n            }\n            if (_isTransformer(obj)) {\n                var transducer = xf.apply(null, args);\n                return transducer(obj);\n            }\n        }\n        return fn.apply(this, arguments);\n    };\n}\nfunction _reduced(x) {\n    return x && x['@@transducer/reduced'] ? x : {\n        '@@transducer/value': x,\n        '@@transducer/reduced': true\n    };\n}\nvar _xfBase = {\n    init: function () {\n        return this.xf['@@transducer/init']();\n    },\n    result: function (result) {\n        return this.xf['@@transducer/result'](result);\n    }\n};\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/ _curry2(function max(a, b) {\n    return b > a ? b : a;\n});\nfunction _map(fn, functor) {\n    var idx = 0;\n    var len = functor.length;\n    var result = Array(len);\n    while (idx < len) {\n        result[idx] = fn(functor[idx]);\n        idx += 1;\n    }\n    return result;\n}\nfunction _isString(x) {\n    return Object.prototype.toString.call(x) === '[object String]';\n}\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/ _curry1(function isArrayLike(x) {\n    if (_isArray(x)) {\n        return true;\n    }\n    if (!x) {\n        return false;\n    }\n    if (typeof x !== 'object') {\n        return false;\n    }\n    if (_isString(x)) {\n        return false;\n    }\n    if (x.nodeType === 1) {\n        return !!x.length;\n    }\n    if (x.length === 0) {\n        return true;\n    }\n    if (x.length > 0) {\n        return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n    }\n    return false;\n});\nvar XWrap = /*#__PURE__*/ function () {\n    function XWrap(fn) {\n        this.f = fn;\n    }\n    XWrap.prototype['@@transducer/init'] = function () {\n        throw new Error('init not implemented on XWrap');\n    };\n    XWrap.prototype['@@transducer/result'] = function (acc) {\n        return acc;\n    };\n    XWrap.prototype['@@transducer/step'] = function (acc, x) {\n        return this.f(acc, x);\n    };\n    return XWrap;\n}();\nfunction _xwrap(fn) {\n    return new XWrap(fn);\n}\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/ _curry2(function bind(fn, thisObj) {\n    return _arity(fn.length, function () {\n        return fn.apply(thisObj, arguments);\n    });\n});\nfunction _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n        acc = xf['@@transducer/step'](acc, list[idx]);\n        if (acc && acc['@@transducer/reduced']) {\n            acc = acc['@@transducer/value'];\n            break;\n        }\n        idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n}\nfunction _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n        acc = xf['@@transducer/step'](acc, step.value);\n        if (acc && acc['@@transducer/reduced']) {\n            acc = acc['@@transducer/value'];\n            break;\n        }\n        step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n}\nfunction _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nfunction _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n        fn = _xwrap(fn);\n    }\n    if (_isArrayLike(list)) {\n        return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n        return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n    if (list[symIterator] != null) {\n        return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n        return _iterableReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n        return _methodReduce(fn, acc, list, 'reduce');\n    }\n    throw new TypeError('reduce: list must be array or iterable');\n}\nvar XMap = /*#__PURE__*/ function () {\n    function XMap(f, xf) {\n        this.xf = xf;\n        this.f = f;\n    }\n    XMap.prototype['@@transducer/init'] = _xfBase.init;\n    XMap.prototype['@@transducer/result'] = _xfBase.result;\n    XMap.prototype['@@transducer/step'] = function (result, input) {\n        return this.xf['@@transducer/step'](result, this.f(input));\n    };\n    return XMap;\n}();\nvar _xmap = /*#__PURE__*/ _curry2(function _xmap(f, xf) {\n    return new XMap(f, xf);\n});\nfunction _has(prop, obj) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n    return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n        return toString.call(x) === '[object Arguments]';\n    } : function _isArguments(x) {\n        return _has('callee', x);\n    };\n};\n// cover IE < 9 keys issues\nvar hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/ function () {\n    return arguments.propertyIsEnumerable('length');\n}();\nvar contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n        if (list[idx] === item) {\n            return true;\n        }\n        idx += 1;\n    }\n    return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n    return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n    if (Object(obj) !== obj) {\n        return [];\n    }\n    var prop, nIdx;\n    var ks = [];\n    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n    for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n            ks[ks.length] = prop;\n        }\n    }\n    if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n            prop = nonEnumerableProps[nIdx];\n            if (_has(prop, obj) && !contains(ks, prop)) {\n                ks[ks.length] = prop;\n            }\n            nIdx -= 1;\n        }\n    }\n    return ks;\n};\nvar keys = /*#__PURE__*/ _curry1(_keys);\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n    switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n            return curryN(functor.length, function () {\n                return fn.call(this, functor.apply(this, arguments));\n            });\n        case '[object Object]':\n            return _reduce(function (acc, key) {\n                acc[key] = fn(functor[key]);\n                return acc;\n            }, {}, keys(functor));\n        default:\n            return _map(fn, functor);\n    }\n}));\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/ _curry2(function path(paths, obj) {\n    var val = obj;\n    var idx = 0;\n    while (idx < paths.length) {\n        if (val == null) {\n            return;\n        }\n        val = val[paths[idx]];\n        idx += 1;\n    }\n    return val;\n});\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nvar prop = /*#__PURE__*/ _curry2(function prop(p, obj) {\n    return path([p], obj);\n});\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/ _curry2(function pluck(p, list) {\n    return map(prop(p), list);\n});\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/ _curry3(_reduce);\nvar XAny = /*#__PURE__*/ function () {\n    function XAny(f, xf) {\n        this.xf = xf;\n        this.f = f;\n        this.any = false;\n    }\n    XAny.prototype['@@transducer/init'] = _xfBase.init;\n    XAny.prototype['@@transducer/result'] = function (result) {\n        if (!this.any) {\n            result = this.xf['@@transducer/step'](result, false);\n        }\n        return this.xf['@@transducer/result'](result);\n    };\n    XAny.prototype['@@transducer/step'] = function (result, input) {\n        if (this.f(input)) {\n            this.any = true;\n            result = _reduced(this.xf['@@transducer/step'](result, true));\n        }\n        return result;\n    };\n    return XAny;\n}();\nvar _xany = /*#__PURE__*/ _curry2(function _xany(f, xf) {\n    return new XAny(f, xf);\n});\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable(['any'], _xany, function any(fn, list) {\n    var idx = 0;\n    while (idx < list.length) {\n        if (fn(list[idx])) {\n            return true;\n        }\n        idx += 1;\n    }\n    return false;\n}));\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/ _curry2(function ap(applyF, applyX) {\n    return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n        return applyF(x)(applyX(x));\n    } :\n        // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, applyX));\n        }, [], applyF);\n});\nfunction _aperture(n, list) {\n    var idx = 0;\n    var limit = list.length - (n - 1);\n    var acc = new Array(limit >= 0 ? limit : 0);\n    while (idx < limit) {\n        acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n        idx += 1;\n    }\n    return acc;\n}\nvar XAperture = /*#__PURE__*/ function () {\n    function XAperture(n, xf) {\n        this.xf = xf;\n        this.pos = 0;\n        this.full = false;\n        this.acc = new Array(n);\n    }\n    XAperture.prototype['@@transducer/init'] = _xfBase.init;\n    XAperture.prototype['@@transducer/result'] = function (result) {\n        this.acc = null;\n        return this.xf['@@transducer/result'](result);\n    };\n    XAperture.prototype['@@transducer/step'] = function (result, input) {\n        this.store(input);\n        return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n    };\n    XAperture.prototype.store = function (input) {\n        this.acc[this.pos] = input;\n        this.pos += 1;\n        if (this.pos === this.acc.length) {\n            this.pos = 0;\n            this.full = true;\n        }\n    };\n    XAperture.prototype.getCopy = function () {\n        return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n    };\n    return XAperture;\n}();\nvar _xaperture = /*#__PURE__*/ _curry2(function _xaperture(n, xf) {\n    return new XAperture(n, xf);\n});\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable([], _xaperture, _aperture));\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/ _curry2(function apply(fn, args) {\n    return fn.apply(this, args);\n});\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/ _curry1(function values(obj) {\n    var props = keys(obj);\n    var len = props.length;\n    var vals = [];\n    var idx = 0;\n    while (idx < len) {\n        vals[idx] = obj[props[idx]];\n        idx += 1;\n    }\n    return vals;\n});\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/ _curry1(function applySpec(spec) {\n    spec = map(function (v) {\n        return typeof v == 'function' ? v : applySpec(v);\n    }, spec);\n    return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n        var args = arguments;\n        return map(function (f) {\n            return apply(f, args);\n        }, spec);\n    });\n});\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/ _curry1(function isNil(x) {\n    return x == null;\n});\nfunction _isFunction(x) {\n    return Object.prototype.toString.call(x) === '[object Function]';\n}\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/ _curry2(function liftN(arity, fn) {\n    var lifted = curryN(arity, fn);\n    return curryN(arity, function () {\n        return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n    });\n});\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/ _curry1(function lift(fn) {\n    return liftN(fn.length, fn);\n});\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nfunction _makeFlat(recursive) {\n    return function flatt(list) {\n        var value, jlen, j;\n        var result = [];\n        var idx = 0;\n        var ilen = list.length;\n        while (idx < ilen) {\n            if (_isArrayLike(list[idx])) {\n                value = recursive ? flatt(list[idx]) : list[idx];\n                j = 0;\n                jlen = value.length;\n                while (j < jlen) {\n                    result[result.length] = value[j];\n                    j += 1;\n                }\n            }\n            else {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n}\nfunction _forceReduced(x) {\n    return {\n        '@@transducer/value': x,\n        '@@transducer/reduced': true\n    };\n}\nvar preservingReduced = function (xf) {\n    return {\n        '@@transducer/init': _xfBase.init,\n        '@@transducer/result': function (result) {\n            return xf['@@transducer/result'](result);\n        },\n        '@@transducer/step': function (result, input) {\n            var ret = xf['@@transducer/step'](result, input);\n            return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n        }\n    };\n};\nvar _flatCat = function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n        '@@transducer/init': _xfBase.init,\n        '@@transducer/result': function (result) {\n            return rxf['@@transducer/result'](result);\n        },\n        '@@transducer/step': function (result, input) {\n            return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n        }\n    };\n};\nvar _xchain = /*#__PURE__*/ _curry2(function _xchain(f, xf) {\n    return map(f, _flatCat(xf));\n});\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n    if (typeof monad === 'function') {\n        return function (x) {\n            return fn(monad(x))(x);\n        };\n    }\n    return _makeFlat(false)(map(fn, monad));\n}));\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/ _curry1(function type(val) {\n    return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nfunction _pipe(f, g) {\n    return function () {\n        return g.call(this, f.apply(this, arguments));\n    };\n}\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nfunction _checkForMethod(methodname, fn) {\n    return function () {\n        var length = arguments.length;\n        if (length === 0) {\n            return fn();\n        }\n        var obj = arguments[length - 1];\n        return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n    };\n}\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/ _curry3(/*#__PURE__*/ _checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n    return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/ _curry1(/*#__PURE__*/ _checkForMethod('tail', /*#__PURE__*/ slice(1, Infinity)));\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nfunction pipe() {\n    if (arguments.length === 0) {\n        throw new Error('pipe requires at least one argument');\n    }\n    return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\nfunction _arrayFromIterator(iter) {\n    var list = [];\n    var next;\n    while (!(next = iter.next()).done) {\n        list.push(next.value);\n    }\n    return list;\n}\nfunction _containsWith(pred, x, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n        if (pred(x, list[idx])) {\n            return true;\n        }\n        idx += 1;\n    }\n    return false;\n}\nfunction _functionName(f) {\n    // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n    var match = String(f).match(/^function (\\w*)/);\n    return match == null ? '' : match[1];\n}\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/ _curry2(function identical(a, b) {\n    // SameValue algorithm\n    if (a === b) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return a !== 0 || 1 / a === 1 / b;\n    }\n    else {\n        // Step 6.a: NaN == NaN\n        return a !== a && b !== b;\n    }\n});\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n    var a = _arrayFromIterator(aIterator);\n    var b = _arrayFromIterator(bIterator);\n    function eq(_a, _b) {\n        return _equals(_a, _b, stackA.slice(), stackB.slice());\n    }\n    // if *a* array contains any element that is not included in *b*\n    return !_containsWith(function (b, aItem) {\n        return !_containsWith(eq, aItem, b);\n    }, b, a);\n}\nfunction _equals(a, b, stackA, stackB) {\n    if (identical(a, b)) {\n        return true;\n    }\n    var typeA = type(a);\n    if (typeA !== type(b)) {\n        return false;\n    }\n    if (a == null || b == null) {\n        return false;\n    }\n    if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n        return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n    }\n    if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n        return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n    }\n    switch (typeA) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n            if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n                return a === b;\n            }\n            break;\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n                return false;\n            }\n            break;\n        case 'Date':\n            if (!identical(a.valueOf(), b.valueOf())) {\n                return false;\n            }\n            break;\n        case 'Error':\n            return a.name === b.name && a.message === b.message;\n        case 'RegExp':\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                return false;\n            }\n            break;\n    }\n    var idx = stackA.length - 1;\n    while (idx >= 0) {\n        if (stackA[idx] === a) {\n            return stackB[idx] === b;\n        }\n        idx -= 1;\n    }\n    switch (typeA) {\n        case 'Map':\n            if (a.size !== b.size) {\n                return false;\n            }\n            return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n        case 'Set':\n            if (a.size !== b.size) {\n                return false;\n            }\n            return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n        case 'Date':\n        case 'Error':\n        case 'RegExp':\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n        case 'ArrayBuffer':\n            break;\n        default:\n            // Values of other types are only equal if identical.\n            return false;\n    }\n    var keysA = keys(a);\n    if (keysA.length !== keys(b).length) {\n        return false;\n    }\n    var extendedStackA = stackA.concat([a]);\n    var extendedStackB = stackB.concat([b]);\n    idx = keysA.length - 1;\n    while (idx >= 0) {\n        var key = keysA[idx];\n        if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n            return false;\n        }\n        idx -= 1;\n    }\n    return true;\n}\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/ _curry2(function equals(a, b) {\n    return _equals(a, b, [], []);\n});\nfunction _indexOf(list, a, idx) {\n    var inf, item;\n    // Array.prototype.indexOf doesn't exist below IE9\n    if (typeof list.indexOf === 'function') {\n        switch (typeof a) {\n            case 'number':\n                if (a === 0) {\n                    // manually crawl the list to distinguish between +0 and -0\n                    inf = 1 / a;\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (item === 0 && 1 / item === inf) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                else if (a !== a) {\n                    // NaN\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (typeof item === 'number' && item !== item) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                // non-zero numbers can utilise Set\n                return list.indexOf(a, idx);\n            // all these types can utilise Set\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                return list.indexOf(a, idx);\n            case 'object':\n                if (a === null) {\n                    // null can utilise Set\n                    return list.indexOf(a, idx);\n                }\n        }\n    }\n    // anything else not covered above, defer to R.equals\n    while (idx < list.length) {\n        if (equals(list[idx], a)) {\n            return idx;\n        }\n        idx += 1;\n    }\n    return -1;\n}\nfunction _contains(a, list) {\n    return _indexOf(list, a, 0) >= 0;\n}\nfunction _quote(s) {\n    var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n        .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n    return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\n/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n    return (n < 10 ? '0' : '') + n;\n};\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n    return d.toISOString();\n} : function _toISOString(d) {\n    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\nfunction _complement(f) {\n    return function () {\n        return !f.apply(this, arguments);\n    };\n}\nfunction _filter(fn, list) {\n    var idx = 0;\n    var len = list.length;\n    var result = [];\n    while (idx < len) {\n        if (fn(list[idx])) {\n            result[result.length] = list[idx];\n        }\n        idx += 1;\n    }\n    return result;\n}\nfunction _isObject(x) {\n    return Object.prototype.toString.call(x) === '[object Object]';\n}\nvar XFilter = /*#__PURE__*/ function () {\n    function XFilter(f, xf) {\n        this.xf = xf;\n        this.f = f;\n    }\n    XFilter.prototype['@@transducer/init'] = _xfBase.init;\n    XFilter.prototype['@@transducer/result'] = _xfBase.result;\n    XFilter.prototype['@@transducer/step'] = function (result, input) {\n        return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n    };\n    return XFilter;\n}();\nvar _xfilter = /*#__PURE__*/ _curry2(function _xfilter(f, xf) {\n    return new XFilter(f, xf);\n});\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable(['filter'], _xfilter, function (pred, filterable) {\n    return _isObject(filterable) ? _reduce(function (acc, key) {\n        if (pred(filterable[key])) {\n            acc[key] = filterable[key];\n        }\n        return acc;\n    }, {}, keys(filterable)) :\n        // else\n        _filter(pred, filterable);\n}));\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/ _curry2(function reject(pred, filterable) {\n    return filter(_complement(pred), filterable);\n});\nfunction _toString(x, seen) {\n    var recur = function recur(y) {\n        var xs = seen.concat([x]);\n        return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n    };\n    //  mapPairs :: (Object, [String]) -> [String]\n    var mapPairs = function (obj, keys) {\n        return _map(function (k) {\n            return _quote(k) + ': ' + recur(obj[k]);\n        }, keys.slice().sort());\n    };\n    switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                return (/^\\d+$/.test(k));\n            }, keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            if (typeof x.toString === 'function') {\n                var repr = x.toString();\n                if (repr !== '[object Object]') {\n                    return repr;\n                }\n            }\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n    }\n}\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString$1 = /*#__PURE__*/ _curry1(function toString(val) {\n    return _toString(val, []);\n});\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/ _curry2(function concat(a, b) {\n    if (_isArray(a)) {\n        if (_isArray(b)) {\n            return a.concat(b);\n        }\n        throw new TypeError(toString$1(b) + ' is not an array');\n    }\n    if (_isString(a)) {\n        if (_isString(b)) {\n            return a + b;\n        }\n        throw new TypeError(toString$1(b) + ' is not a string');\n    }\n    if (a != null && _isFunction(a['fantasy-land/concat'])) {\n        return a['fantasy-land/concat'](b);\n    }\n    if (a != null && _isFunction(a.concat)) {\n        return a.concat(b);\n    }\n    throw new TypeError(toString$1(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/ _curry2(function converge(after, fns) {\n    return curryN(reduce(max, 0, pluck('length', fns)), function () {\n        var args = arguments;\n        var context = this;\n        return after.apply(context, _map(function (fn) {\n            return fn.apply(context, args);\n        }, fns));\n    });\n});\nvar XDrop = /*#__PURE__*/ function () {\n    function XDrop(n, xf) {\n        this.xf = xf;\n        this.n = n;\n    }\n    XDrop.prototype['@@transducer/init'] = _xfBase.init;\n    XDrop.prototype['@@transducer/result'] = _xfBase.result;\n    XDrop.prototype['@@transducer/step'] = function (result, input) {\n        if (this.n > 0) {\n            this.n -= 1;\n            return result;\n        }\n        return this.xf['@@transducer/step'](result, input);\n    };\n    return XDrop;\n}();\nvar _xdrop = /*#__PURE__*/ _curry2(function _xdrop(n, xf) {\n    return new XDrop(n, xf);\n});\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable(['drop'], _xdrop, function drop(n, xs) {\n    return slice(Math.max(0, n), Infinity, xs);\n}));\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/ _curry2(function nth(offset, list) {\n    var idx = offset < 0 ? list.length + offset : offset;\n    return _isString(list) ? list.charAt(idx) : list[idx];\n});\nvar XDropWhile = /*#__PURE__*/ function () {\n    function XDropWhile(f, xf) {\n        this.xf = xf;\n        this.f = f;\n    }\n    XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n    XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n    XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n        if (this.f) {\n            if (this.f(input)) {\n                return result;\n            }\n            this.f = null;\n        }\n        return this.xf['@@transducer/step'](result, input);\n    };\n    return XDropWhile;\n}();\nvar _xdropWhile = /*#__PURE__*/ _curry2(function _xdropWhile(f, xf) {\n    return new XDropWhile(f, xf);\n});\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/ _curry2(/*#__PURE__*/ _dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n    var idx = 0;\n    var len = xs.length;\n    while (idx < len && pred(xs[idx])) {\n        idx += 1;\n    }\n    return slice(idx, Infinity, xs);\n}));\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/ _curry2(function or(a, b) {\n    return a || b;\n});\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/ _curry2(function either(f, g) {\n    return _isFunction(f) ? function _either() {\n        return f.apply(this, arguments) || g.apply(this, arguments);\n    } : lift(or)(f, g);\n});\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/ _curry1(function empty(x) {\n    return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n        return arguments;\n    }() :\n        // else\n        void 0;\n});\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/ _curry2(function (fn, list) {\n    var res = [];\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n        var nextidx = idx + 1;\n        while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n            nextidx += 1;\n        }\n        res.push(list.slice(idx, nextidx));\n        idx = nextidx;\n    }\n    return res;\n});\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/ nth(0);\nfunction _identity(x) {\n    return x;\n}\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/ _curry1(function isEmpty(x) {\n    return x != null && equals(x, empty(x));\n});\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/ _curry1(function nthArg(n) {\n    var arity = n < 0 ? 1 : n + 1;\n    return curryN(arity, function () {\n        return nth(n, arguments);\n    });\n});\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/ _curry2(function sortBy(fn, list) {\n    return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n        var aa = fn(a);\n        var bb = fn(b);\n        return aa < bb ? -1 : aa > bb ? 1 : 0;\n    });\n});\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/ _curry2(function unfold(fn, seed) {\n    var pair = fn(seed);\n    var result = [];\n    while (pair && pair.length) {\n        result[result.length] = pair[0];\n        pair = fn(pair[1]);\n    }\n    return result;\n});\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/ chain(_identity);\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s)\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)\n            if (e.indexOf(p[i]) < 0)\n                t[p[i]] = s[p[i]];\n    return t;\n};\n/**\n * Complement of `intervals` bounded to `boundaries`. Convert space between two consecutive intervals into interval.\n * Keeps extra object properties on `boundaries`.\n * intervals array has to be sorted.\n * Doesn't mutate input. Output keeps input's structure.\n *\n * boundaries | interval(s) | result\n * --- | --- | ---\n * { start: 0, end: 10} | [{ start: 3, end: 7 }] | [{ start: 0, end: 3 }, { start: 7, end: 10 }]\n * { start: 0, end: 10} | [{ start: 2, end: 4 }, { start: 7, end: 8 }] | [{ start: 0, end: 2 }, { start: 4, end: 7 }, { start: 8, end: 10 }]\n *\n * @param boundaries arg1: interval defining boundaries for the complement computation.\n * @param intervals arg2: array of intervals that complement the result.\n * @returns array of intervals.\n */\nvar complement = function (boundaries, intervals) {\n    var _a = boundaries, start = _a.start, end = _a.end, rest = __rest(_a, [\"start\", \"end\"]); // See TypeScript/pull/13288 TypeScript/issues/10727\n    var prepRanges = __spreadArrays([\n        { start: -Infinity, end: start }\n    ], intervals, [\n        { start: end, end: Infinity },\n    ]);\n    return reject(isNil, aperture(2, prepRanges).map(function (_d) {\n        var r1 = _d[0], r2 = _d[1];\n        return (r1.end >= r2.start ? null : Object.assign({ start: r1.end, end: r2.start }, rest));\n    }));\n};\n/**\n * Test if `intervalA` overlaps with `intervalB`.\n *\n * intervalA | intervalB | result\n * --- | --- | ---\n * { start: 0, end: 10} | { start: 3, end: 7 } | true\n * { start: 0, end: 5} | { start: 5, end: 7 } | false\n *\n * @param intervalA arg1: interval\n * @param intervalB arg2: interval\n * @returns true if overlaps\n */\nvar isOverlappingSimple = function (a, b) {\n    return b.start < a.end && b.end > a.start;\n};\nvar beforeOrAdjTo = function (afterInt) { return function (beforeInt) { return beforeInt.end <= afterInt.start; }; };\n/**\n * Test if `intervalA` is adjacent to (meets) `intervalB`.\n *\n * intervalA | intervalB | result\n * --- | --- | ---\n * { start: 0, end: 10} | { start: 3, end: 7 } | false\n * { start: 0, end: 5} | { start: 5, end: 7 } | true\n *\n * @param intervalA arg1: interval\n * @param intervalB arg2: interval\n * @returns true if adjacent\n */\nvar isMeeting = function (a, b) {\n    return a.start === b.end || a.end === b.start;\n};\nvar propFromNthArg = function (n, propName) { return pipe(nthArg(n), prop(propName)); };\nvar maxEnd = function (ranges) { return ranges.reduce(function (a, b) { return (a.end > b.end ? a : b); }); };\nvar simplifyPipe = pipe(groupWith(either(isOverlappingSimple, isMeeting)), map(converge(applySpec({ start: propFromNthArg(0, 'start'), end: propFromNthArg(1, 'end') }), [head, maxEnd])));\n/**\n * Simplification of `intervals`. Unify touching or overlapping intervals.\n *\n * Intervals array has to be sorted.\n *\n * Doesn't mutate input. Output keeps input's structure.\n *\n * | intervals A | result |\n * | ----------- | ------ |\n * | [{ start: 3, end: 9 }, { start: 9, end: 13 }, { start: 11, end: 14 }] | [{ start: 3, end: 14 }] |\n *\n * @param intervalA\n */\nvar simplify = function (intervals) { return simplifyPipe(__spreadArrays(intervals)); };\nvar sortByStart = sortBy(prop('start'));\nvar unifyPipe = pipe(concat, sortByStart, simplify);\nvar intersectUnfolderSeed = function (i1, i2) {\n    var new1 = i1[0].end > i2[0].end ? i1 : drop(1, i1);\n    var new2 = i2[0].end > i1[0].end ? i2 : drop(1, i2);\n    return [new1, new2];\n};\nvar intersectUnfolder = function (_d) {\n    var inters1 = _d[0], inters2 = _d[1];\n    if (any(isEmpty)([inters1, inters2])) {\n        return false;\n    }\n    var newInters1 = dropWhile(beforeOrAdjTo(inters2[0]), inters1);\n    if (isEmpty(newInters1)) {\n        return false;\n    }\n    var inter1 = newInters1[0];\n    var newInters2 = dropWhile(beforeOrAdjTo(inter1), inters2);\n    if (isEmpty(newInters2)) {\n        return false;\n    }\n    var inter2 = newInters2[0];\n    var minMaxInter = Object.assign({}, inter2, { end: Math.min(inter1.end, inter2.end), start: Math.max(inter1.start, inter2.start) });\n    var resultInter = beforeOrAdjTo(minMaxInter)(minMaxInter) ? null : minMaxInter;\n    var seed = intersectUnfolderSeed(newInters1, newInters2);\n    return [resultInter, seed];\n};\n/**\n * Intersection of `intervals`. Does not simplify result. Keeps extra object properties on `intervalB`.\n *\n * `interalA` and `interalB` can have different structure.\n * Accept array of intervals. Doesn't mutate input. Output keeps `intervalB` structure.\n * Intervals arrays have to be sorted.\n *\n * interval(s) A | interval(s) B | result\n * --- | --- | ---\n * { from: 0, to: 4 } | { start: 3, end: 7, foo: 'bar' } | [{ start: 3, end: 4, foo: 'bar' }]\n * { start: 0, end: 10 } | [{ start: 2, end: 5}, { start: 5, end: 8}] | [{ start: 2, end: 5 }, { start: 5, end: 8 }]\n * [{ start: 0, end: 4 }, { start: 8, end: 11 }] | [{ start: 2, end: 9 }, { start: 10, end: 13 }] | [{ start: 2, end: 4 }, { start: 8, end: 9 }, { start: 10, end: 11 }]\n *\n * @param intervalA arg1: array of intervals\n * @param intervalB arg2: array of intervals\n * @returns intersection of `arg1` and `arg2`\n */\nvar intersect = function (intervalsA, intervalsB) {\n    return unfold(intersectUnfolder, [intervalsA, intervalsB]).filter(function (i) { return i != null; });\n};\nvar subtractInter = function (mask, base) {\n    return complement(base, mask);\n};\n/**\n * Subtact `base` with `mask`.\n * Keeps extra object properties on `base`.\n *\n * Accept array of intervals. Doesn't mutate input. Output keeps input's structure.\n * Intervals arrays have to be sorted.\n *\n * interval(s) base | interval(s) mask | result\n * --- | --- | ---\n * [{ start: 0, end: 4 }] | [{ start: 3, end: 7 }] | [{ start: 0, end: 3 }]\n * [{ start: 0, end: 4 }, { start: 8, end: 11 }] | [{ start: 2, end: 9 }, { start: 10, end: 13 }] | [{ start: 0, end: 2 }, { start: 9, end: 10 }]\n *\n * @param intervalA arg1: array of intervals\n * @param intervalB arg2: array of intervals\n * @returns intersection of `arg1` and `arg2`\n */\nvar substract = function (base, mask) {\n    var intersection = intersect(mask, base);\n    return unnest(base.map(function (b) { return subtractInter(intersection.filter(isOverlappingSimple.bind(null, b)), b); }));\n};\nvar toObjectNotation = function (_d) {\n    var start = _d[0], end = _d[1];\n    return ({ start: start, end: end });\n};\nvar toIntervalNotation = function (_d) {\n    var start = _d.start, end = _d.end;\n    return [start, end];\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar isBeforeInterval = function (_d, _e) {\n    var _ = _d[0], aEnd = _d[1];\n    var bStart = _e[0];\n    return aEnd < bStart;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar isAfterInterval = function (_d, _e) {\n    var aStart = _d[0];\n    var _ = _e[0], bEnd = _e[1];\n    return aStart > bEnd;\n};\nvar isIntersecting = function (a, b) { return !isBeforeInterval(a, b) && !isAfterInterval(a, b); };\nvar intersect$1 = function (aIntervals, bIntervals) {\n    var intersectedIntervals = simplify(intersect(aIntervals.map(toObjectNotation), bIntervals.map(toObjectNotation)));\n    return intersectedIntervals.map(toIntervalNotation);\n};\nvar subtractIntervals = function (interval, intervals) {\n    var sortedIntervals = intervals.sort(function (i1, i2) { return i1[0] - i2[0]; }).map(toObjectNotation);\n    var subtractedIntervals = substract([toObjectNotation(interval)], simplify(sortedIntervals));\n    return simplify(subtractedIntervals)\n        .filter(function (inter) { return inter.start < inter.end; })\n        .map(toIntervalNotation);\n};\n/**\n * Merges together to lists of items given a way to compare items.\n *\n * Returns back a single list of items, sorted by `compare`, with no duplicates.\n *\n * `aItems` and `bItems` are assumed to be sorted by `compare`.\n *\n * If `aItems` and `bItems` have overlap, always take the items specified in `aItems`\n */\nvar mergeItems = function (aItems, bItems, compare) {\n    // Empty items edge cases\n    if (aItems.length === 0) {\n        return bItems;\n    }\n    if (bItems.length === 0) {\n        return aItems;\n    }\n    // Non-overlapping interval merge cases\n    if (compare(aItems[0], bItems[bItems.length - 1]) > 0) {\n        return __spreadArrays(bItems, aItems);\n    }\n    if (compare(aItems[aItems.length - 1], bItems[0]) < 0) {\n        return __spreadArrays(aItems, bItems);\n    }\n    // Fully contained edge cases\n    if (compare(aItems[0], bItems[0]) <= 0 && compare(aItems[aItems.length - 1], bItems[bItems.length - 1]) >= 0) {\n        // `aItems` fully contains `bItems`\n        return aItems;\n    }\n    if (compare(bItems[0], aItems[0]) <= 0 && compare(bItems[bItems.length - 1], aItems[aItems.length - 1]) >= 0) {\n        // `bItems` fully contains `aItems`\n        var itemsBeforeA = bItems.filter(function (item) { return compare(item, aItems[0]) < 0; });\n        var itemsAfterA = bItems.filter(function (item) { return compare(item, aItems[aItems.length - 1]) > 0; });\n        return __spreadArrays(itemsBeforeA, aItems, itemsAfterA);\n    }\n    // Merge items\n    if (compare(aItems[0], bItems[0]) < 0) {\n        // `aItems` interval begins before `bItems`\n        return __spreadArrays(aItems, bItems.filter(function (x) { return compare(x, aItems[aItems.length - 1]) > 0; }));\n    }\n    // `bItems` interval begins before `aItems`\n    return __spreadArrays(bItems.filter(function (x) { return compare(x, aItems[0]) < 0; }), aItems);\n};\nvar addInterval = function (intervalStructure, interval, items, compare) {\n    var overlappingIntervals = intervalStructure.intervals\n        .map(function (i, index) { return ({\n        interval: i,\n        index: index,\n    }); })\n        .filter(function (_d) {\n        var i = _d.interval;\n        return isIntersecting(interval, i);\n    });\n    // Combine all overlapping intervals into a single interval\n    var combinedInterval = overlappingIntervals.reduce(function (mergedInterval, _d) {\n        var currInterval = _d.interval;\n        return [Math.min(mergedInterval[0], currInterval[0]), Math.max(mergedInterval[1], currInterval[1])];\n    }, interval);\n    // Combine all elements from all overlapping intervals\n    var combinedItems = overlappingIntervals.reduce(function (mergedItems, _d) {\n        var index = _d.index;\n        return mergeItems(mergedItems, intervalStructure.items[index], compare);\n    }, items);\n    // Get Insert Points\n    var i = intervalStructure.intervals.findIndex(function (int) { return isBeforeInterval(interval, int) || isIntersecting(interval, int); });\n    var insertIndex = i >= 0 ? i : intervalStructure.intervals.length;\n    // Apply update\n    var updatedIntervals = __spreadArrays(intervalStructure.intervals);\n    updatedIntervals.splice(insertIndex, overlappingIntervals.length, combinedInterval);\n    var updatedItems = __spreadArrays(intervalStructure.items);\n    updatedItems.splice(insertIndex, overlappingIntervals.length, combinedItems);\n    return {\n        intervals: updatedIntervals,\n        items: updatedItems,\n    };\n};\n/**\n * Ge Expired Cache Intervals\n *\n * Given a mapping of caching rules and the number of milliseconds behind present time,\n * return intervals represent which caches are expired\n */\nvar getExpiredCacheIntervals = function (ttlDurationMapping, _d) {\n    var start = _d.start, end = _d.end, requestedAt = _d.requestedAt;\n    var sortedCaches = Object.keys(ttlDurationMapping)\n        .map(function (duration) { return ({\n        duration: Number(duration),\n        ttl: ttlDurationMapping[Number(duration)],\n    }); })\n        .reverse();\n    var now = Date.now();\n    var timeSinceRequest = now - requestedAt.getTime();\n    // get the active cache rule\n    var caches = sortedCaches.filter(function (_d) {\n        var duration = _d.duration, ttl = _d.ttl;\n        return timeSinceRequest <= duration && timeSinceRequest > ttl;\n    });\n    // If there are no active cache rules, then there are no expired cache intervals\n    if (caches.length === 0) {\n        return [];\n    }\n    var expiredIntervals = caches.map(function (_d) {\n        var duration = _d.duration, ttl = _d.ttl;\n        return [now - duration, now - ttl];\n    });\n    return intersect$1(expiredIntervals, [[start.getTime(), end.getTime()]]);\n};\n// The duration which a date range must have, in order to be initiated.\n// Is a trade off between making many requests and getting new data faster.\nvar REQUEST_PER_MS = SECOND_IN_MS * 5;\n// given duration specified as a key, it may only be re-requested after the provided TTL value\n// has been surpassed.\n// If the duration since the last request was longer the any of the provided duration's, then the value never expires.\n// INVARIANT: for any two pairs (durationMS, TTL), if a given durationMS is larger than another durationMS, it's TTL\n//            must also be larger\n//            i.e. given two pairs, (d1, ttl1) and (d2, ttl2),\n//            d1 > d2 iff ttl1 > ttl2\nvar TTL_DURATION_CACHE_RULES = (_d = {},\n    _d[1.2 * MINUTE_IN_MS] = 0,\n    _d[3 * MINUTE_IN_MS] = 30 * SECOND_IN_MS,\n    _d[20 * MINUTE_IN_MS] = 5 * MINUTE_IN_MS,\n    _d);\nvar unexpiredCacheIntervals = function (streamStore, ttlDurationMapping) {\n    var expiredCacheIntervals = streamStore.requestHistory\n        .map(function (historicalRequest) { return getExpiredCacheIntervals(ttlDurationMapping, historicalRequest); })\n        .flat();\n    var allCachedIntervals = streamStore.requestCache.intervals;\n    return allCachedIntervals.map(function (interval) { return subtractIntervals(interval, expiredCacheIntervals); }).flat();\n};\n/**\n * Returns all the date ranges that need to be requested.\n * Returns empty list if there are no date ranges needed to be requested.\n *\n * This takes into account what date intervals for a given stream id and resolution exist,\n * allowing us to only request what is needed\n */\nvar getDateRangesToRequest = function (_d) {\n    var store = _d.store, dataStreamId = _d.dataStreamId, start = _d.start, end = _d.end, resolution = _d.resolution;\n    var streamStore = getDataStreamStore(dataStreamId, resolution, store);\n    var isTooShort = end.getTime() - start.getTime() < Math.max(REQUEST_PER_MS, resolution / 2);\n    if (isTooShort) {\n        // We don't want to make requests too quickly in streaming situations.\n        return [];\n    }\n    if (streamStore == null) {\n        return [[start, end]];\n    }\n    // NOTE: Use the request cache since we don't want to request intervals that already have been requested.\n    var cacheIntervals = unexpiredCacheIntervals(streamStore, TTL_DURATION_CACHE_RULES);\n    var millisecondIntervals = subtractIntervals([start.getTime(), end.getTime()], cacheIntervals);\n    return millisecondIntervals\n        .filter(function (_d) {\n        var startMS = _d[0], endMS = _d[1];\n        return endMS - startMS > REQUEST_PER_MS;\n    })\n        .map(function (_d) {\n        var startMS = _d[0], endMS = _d[1];\n        return [new Date(startMS), new Date(endMS)];\n    });\n};\nvar dataPointCompare = function (a, b) {\n    var aTime = a.x.getTime();\n    var bTime = b.x.getTime();\n    if (aTime !== bTime) {\n        return aTime - bTime;\n    }\n    return a.y - b.y;\n};\nvar EMPTY_CACHE = {\n    intervals: [],\n    items: [],\n};\nvar addToDataPointCache = function (_d) {\n    var start = _d.start, end = _d.end, _e = _d.data, data = _e === void 0 ? [] : _e, cache = _d.cache;\n    if (data.length === 0 && start.getTime() === end.getTime()) {\n        return cache;\n    }\n    return addInterval(cache, [start.getTime(), end.getTime()], data, dataPointCompare);\n};\n/**\n *\n * Redux Actions used to communicated to `<bp-data-store />`\n *\n * Presents an external interface for bp-connector implementations to hook\n * data sources to the bp-components.\n */\n/**\n * On Request\n */\nvar REQUEST = 'REQUEST';\nvar onRequestAction = function (payload) { return ({\n    type: REQUEST,\n    payload: payload,\n}); };\nvar onRequest = function (payload) { return function (dispatch, getState) {\n    var resolution = payload.resolution, first = payload.first, last = payload.last, id = payload.id;\n    var dateRanges = getDateRangesToRequest({\n        store: getState(),\n        start: first,\n        end: last,\n        resolution: resolution,\n        dataStreamId: id,\n    });\n    // If we shouldn't request, then we already have the data present within the data store, and\n    // no request is necessary.\n    if (dateRanges.length > 0) {\n        dateRanges.forEach(function (_d) {\n            var start = _d[0], end = _d[1];\n            dispatch(onRequestAction(Object.assign(Object.assign({}, payload), { first: start, last: end })));\n        });\n    }\n    // Informs implementors of `OnRequestData` know which streams require updates.\n    return dateRanges;\n}; };\n/**\n * On Error\n */\nvar ERROR = 'ERROR';\nvar onErrorAction = function (id, resolution, error) { return ({\n    type: ERROR,\n    payload: {\n        id: id,\n        resolution: resolution,\n        error: error,\n    },\n}); };\nvar onError = function (id, resolution, error) { return function (dispatch) {\n    dispatch(onErrorAction(id, resolution, error));\n}; };\n/**\n * On Success\n */\nvar SUCCESS = 'SUCCESS';\nvar onSuccessAction = function (id, data, first, last) { return ({\n    type: SUCCESS,\n    payload: {\n        id: id,\n        data: data,\n        first: first,\n        last: last,\n    },\n}); };\nvar onSuccess = function (id, data, first, last) { return function (dispatch) {\n    dispatch(onSuccessAction(id, data, first, last));\n}; };\nexport { ERROR as E, REQUEST as R, SUCCESS as S, EMPTY_CACHE as a, addToDataPointCache as b, onSuccess as c, onError as d, getDataStreamStore as g, onRequest as o };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}