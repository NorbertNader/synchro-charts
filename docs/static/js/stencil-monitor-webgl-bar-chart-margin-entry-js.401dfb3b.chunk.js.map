{"version":3,"sources":["../node_modules/@amzn/bp-components/dist/esm-es5/monitor-webgl-bar-chart-margin.entry.js","../node_modules/@amzn/bp-components/dist/esm-es5/time-cc688558.js"],"names":["X_MIN","Date","X_MAX","DATA_STREAM_1","id","resolution","MONTH_IN_MS","data","x","y","DATA_STREAM_2","MonitorWebglBarChartDynamicBuffer","hostRef","registerInstance","this","prototype","render","h","style","height","width","marginTop","config","dataStreamInfo","color","name","viewPort","yMin","yMax","start","end","bufferFactor","minBufferSize","SECOND_IN_MS","MINUTE_IN_MS","HOUR_IN_MS","DAY_IN_MS","YEAR_IN_MS","convertMS","milliseconds","Error","seconds","Math","floor","minute","hour","day","displayDate","date","_a","viewPortDurationMS","getTime","toLocaleString","second","hour12","month","year"],"mappings":"kJAAA,yFAKIA,EAAQ,IAAIC,KAAK,KAAM,EAAG,GAC1BC,EAAQ,IAAID,KAAK,KAAM,EAAG,GAM1BE,EAAgB,CAChBC,GAAI,OACJC,WAAYC,IACZC,KAAM,CAAC,CAAEC,EAAG,IAAIP,KAAK,KAAM,EAAG,EAAG,GAAIQ,EAAG,KAAQ,CAAED,EAAG,IAAIP,KAAK,KAAM,EAAG,EAAG,GAAIQ,EAAG,OAEjFC,EAAgB,CAChBN,GAAI,QACJC,WAAYC,IACZC,KAAM,CAAC,CAAEC,EAAG,IAAIP,KAAK,KAAM,EAAG,EAAG,GAAIQ,EAAG,KAAQ,CAAED,EAAG,IAAIP,KAAK,KAAM,EAAG,EAAG,GAAIQ,EAAG,OAEjFE,EAAmD,WACnD,SAASA,EAAkCC,GACvCC,YAAiBC,KAAMF,GACvBE,KAAKP,KAAO,GAoBhB,OAlBAI,EAAkCI,UAAUC,OAAS,WACjD,OAAQC,YAAE,MAAO,CAAEb,GAAI,kBAAmBc,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,UAAW,SAAYJ,YAAE,oBAAqB,CAAEV,KAAM,CAACJ,EAAeO,GAAgBY,OAAQ,CAC1KlB,GAAI,OACJmB,eAAgB,CACZ,CACInB,GAAI,OACJoB,MAAO,MACPC,KAAM,eAEV,CACIrB,GAAI,QACJoB,MAAO,SACPC,KAAM,iBAGdC,SAAU,CAAEC,KAvChB,EAuC6BC,KAtC7B,IAsC0CC,MAAO7B,EAAO8B,IAAK5B,IAC1D6B,aAAc,EAAGC,cAAe,IAAMf,YAAE,wBAAyB,QAErEN,EAvB4C,I,gCCtBvD,oRAAIsB,EAAe,IACfC,EAAe,GAAKD,EACpBE,EAAa,GAAKD,EAClBE,EAAY,GAAKD,EAEjB7B,EAAc,GAAK8B,EACnBC,EAAa,GAAK/B,EAyBlBgC,EAAY,SAAUC,GACtB,GAAIA,EAAe,EACf,MAAM,IAAIC,MAAM,4BAEpB,IAAIC,EAAUC,KAAKC,MAAMJ,EAAe,KACpCK,EAASF,KAAKC,MAAMF,EAAU,IAC9BI,EAAOH,KAAKC,MAAMC,EAAS,IAK/B,MAAO,CACHE,IALMJ,KAAKC,MAAME,EAAO,IAMxBA,KAHJA,GAAQ,GAIJD,OALJA,GAAU,GAMNH,QAPJA,GAAW,KAUXM,EAAc,SAAUC,EAAM3C,EAAY4C,GAC1C,IAAIpB,EAAQoB,EAAGpB,MAAOC,EAAMmB,EAAGnB,IAC/B,GAAIzB,EAAa+B,EAAW,CACxB,IAAIc,EAAqBpB,EAAIqB,UAAYtB,EAAMsB,UAC/C,OAAID,EAAqBhB,EACdc,EAAKI,eAAe,QAAS,CAChCR,OAAQ,UACRS,OAAQ,YAGZH,EAAqB,GAAKhB,EACnBc,EAAKI,eAAe,QAAS,CAChCP,KAAM,UACND,OAAQ,UACRS,OAAQ,UACRC,QAAQ,IAGTN,EAAKI,eAAe,QAAS,CAChCP,KAAM,UACND,OAAQ,UACRU,QAAQ,IAGhB,OAAIjD,GAAc8B,EACPa,EAAKI,eAAe,QAAS,CAChCP,KAAM,UACNC,IAAK,OACLQ,QAAQ,IAGZjD,GAAc+B,EACPY,EAAKI,eAAe,QAAS,CAChCN,IAAK,UACLS,MAAO,SAGRP,EAAKI,eAAe,QAAS,CAChCI,KAAM,UACND,MAAO","file":"static/js/stencil-monitor-webgl-bar-chart-margin-entry-js.401dfb3b.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-326b73e4.js';\nimport { a as MONTH_IN_MS } from './time-cc688558.js';\n// viewport boundaries\nvar Y_MIN = 0;\nvar Y_MAX = 5000;\nvar X_MIN = new Date(1998, 1, 0);\nvar X_MAX = new Date(1998, 6, 0);\n/**\n * Testing route for the webGL rendering without being fully coupled to the chart.\n *\n * Used to test the behavior of a bar chart when adding/removing data points\n */\nvar DATA_STREAM_1 = {\n    id: 'test',\n    resolution: MONTH_IN_MS,\n    data: [{ x: new Date(1998, 3, 0, 0), y: 1000 }, { x: new Date(1998, 4, 0, 0), y: 3000 }],\n};\nvar DATA_STREAM_2 = {\n    id: 'test2',\n    resolution: MONTH_IN_MS,\n    data: [{ x: new Date(1998, 3, 0, 0), y: 2000 }, { x: new Date(1998, 4, 0, 0), y: 4000 }],\n};\nvar MonitorWebglBarChartDynamicBuffer = /** @class */ (function () {\n    function MonitorWebglBarChartDynamicBuffer(hostRef) {\n        registerInstance(this, hostRef);\n        this.data = [];\n    }\n    MonitorWebglBarChartDynamicBuffer.prototype.render = function () {\n        return (h(\"div\", { id: \"chart-container\", style: { height: '500px', width: '500px', marginTop: '20px' } }, h(\"monitor-bar-chart\", { data: [DATA_STREAM_1, DATA_STREAM_2], config: {\n                id: 'a-id',\n                dataStreamInfo: [\n                    {\n                        id: 'test',\n                        color: 'red',\n                        name: 'test stream',\n                    },\n                    {\n                        id: 'test2',\n                        color: 'orange',\n                        name: 'test stream2',\n                    },\n                ],\n                viewPort: { yMin: Y_MIN, yMax: Y_MAX, start: X_MIN, end: X_MAX },\n            }, bufferFactor: 1, minBufferSize: 1 }), h(\"monitor-webgl-context\", null)));\n    };\n    return MonitorWebglBarChartDynamicBuffer;\n}());\nexport { MonitorWebglBarChartDynamicBuffer as monitor_webgl_bar_chart_margin };\n","var SECOND_IN_MS = 1000;\nvar MINUTE_IN_MS = 60 * SECOND_IN_MS;\nvar HOUR_IN_MS = 60 * MINUTE_IN_MS;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\n// Not precisely accurate, only estimates. exact duration depends on start date. use with care.\nvar MONTH_IN_MS = 30 * DAY_IN_MS;\nvar YEAR_IN_MS = 12 * MONTH_IN_MS;\n/**\n * ConvertMS is a helper function that will take in milliseconds and convert it to the highest detonator\n * and does not return the \"remainder\"\n *\n * It is important to note that the object returning does not represent equivalence!\n *\n * For Example:\n * convert(MINUTE_IN_MS) will return:\n * {\n *   day: 0,\n *   hour: 0\n *   minute: 1,\n *   seconds: 0,\n * }\n *\n * IT DOES NOT RETURN:\n *\n * {\n *   day: 0,\n *   hour: 0,\n *   minute: 1,\n *   seconds: 60, <--- does not return the \"equivalence\"\n * }\n */\nvar convertMS = function (milliseconds) {\n    if (milliseconds < 0) {\n        throw new Error('Time cannot be negative!');\n    }\n    var seconds = Math.floor(milliseconds / 1000);\n    var minute = Math.floor(seconds / 60);\n    var hour = Math.floor(minute / 60);\n    var day = Math.floor(hour / 24);\n    seconds %= 60;\n    minute %= 60;\n    hour %= 24;\n    return {\n        day: day,\n        hour: hour,\n        minute: minute,\n        seconds: seconds,\n    };\n};\nvar displayDate = function (date, resolution, _a) {\n    var start = _a.start, end = _a.end;\n    if (resolution < DAY_IN_MS) {\n        var viewPortDurationMS = end.getTime() - start.getTime();\n        if (viewPortDurationMS < MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                minute: 'numeric',\n                second: 'numeric',\n            });\n        }\n        if (viewPortDurationMS < 10 * MINUTE_IN_MS) {\n            return date.toLocaleString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                hour12: true,\n            });\n        }\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n    }\n    if (resolution <= HOUR_IN_MS) {\n        return date.toLocaleString('en-US', {\n            hour: 'numeric',\n            day: 'long',\n            hour12: true,\n        });\n    }\n    if (resolution <= DAY_IN_MS) {\n        return date.toLocaleString('en-US', {\n            day: 'numeric',\n            month: 'long',\n        });\n    }\n    return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n    });\n};\nexport { DAY_IN_MS as D, HOUR_IN_MS as H, MINUTE_IN_MS as M, SECOND_IN_MS as S, YEAR_IN_MS as Y, MONTH_IN_MS as a, convertMS as c, displayDate as d };\n"],"sourceRoot":""}